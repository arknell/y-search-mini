{"version":3,"sources":["api/word/word.controller.js"],"names":["index","run","search","synonym","require","logger","_","req","res","getAllWord","doing","body","method","key","data","remove","words","save","log","json","word","result"],"mappings":"AAAA;;;AAGA;;;;;QAOgBA,K,GAAAA,K;QAKAC,G,GAAAA,G;QAiBAC,M,GAAAA,M;AA3BhB,IAAMC,UAAUC,QAAQ,mCAAR,CAAhB;AACA,IAAIC,SAASD,QAAQ,iCAAR,CAAb;AACA,IAAIE,IAAIF,QAAQ,QAAR,CAAR;;AAEA;AACO,SAASJ,KAAT,CAAeO,GAAf,EAAoBC,GAApB,EAAyB;AAC/BL,SAAQM,UAAR,CAAmBD,GAAnB;AACA;;AAED;AACO,SAASP,GAAT,CAAaM,GAAb,EAAkBC,GAAlB,EAAuB;AAC7B,KAAIE,QAAQH,IAAII,IAAhB;AACA,KAAIC,SAASF,MAAME,MAAnB;;AAEA,KAAIA,WAAW,QAAf,EAAyB;AACxB,MAAIC,MAAMH,MAAMI,IAAhB;AACAX,UAAQY,MAAR,CAAeF,GAAf;AACA,EAHD,MAGO,IAAID,WAAW,MAAf,EAAuB;AAC7B,MAAII,QAAQN,MAAMI,IAAlB;AACAX,UAAQc,IAAR,CAAaD,KAAb;AACA,EAHM,MAGA;AACNX,SAAOa,GAAP,CAAW,OAAX,EAAoB,sBAAsBN,MAAtB,GAA+B,IAAnD;AACA;;AAEDJ,KAAIW,IAAJ,CAAS,EAAT;AACA;;AAEM,SAASjB,MAAT,CAAgBK,GAAhB,EAAqBC,GAArB,EAA0B;AAChC,KAAIM,OAAOP,IAAII,IAAJ,CAASS,IAApB;AACA,KAAIN,QAAQ,IAAR,IAAgBA,SAAS,EAA7B,EACC,OAAOd,MAAMO,GAAN,EAAWC,GAAX,CAAP;;AAED,QAAOL,QAAQD,MAAR,CAAeY,IAAf,EAAqB,UAACO,MAAD,EAAY;AACvCb,MAAIW,IAAJ,CAASE,MAAT;AACA,EAFM,CAAP;AAGA","file":"word.controller.js","sourcesContent":["/**\r\n * 유사어 저장 및 목록 조회\r\n */\r\n'use strict';\r\n\r\nconst synonym = require('../../components/synonyms/synonym');\r\nvar logger = require('../../components/loggers/logger');\r\nvar _ = require('lodash');\r\n\r\n// Gets a list of Leveldbs\r\nexport function index(req, res) {\r\n\tsynonym.getAllWord(res);\r\n}\r\n\r\n// Gets a list of Leveldbs\r\nexport function run(req, res) {\r\n\tlet doing = req.body;\r\n\tlet method = doing.method;\r\n\t\r\n\tif (method === 'delete') {\r\n\t\tlet key = doing.data;\r\n\t\tsynonym.remove(key);\r\n\t} else if (method === 'save') {\r\n\t\tlet words = doing.data;\r\n\t\tsynonym.save(words);\r\n\t} else {\r\n\t\tlogger.log('error', 'unknown method \\'' + method + '\\'');\r\n\t}\r\n\t\r\n\tres.json({});\r\n}\r\n\r\nexport function search(req, res) {\r\n\tlet data = req.body.word;\r\n\tif (data == null || data === '')\r\n\t\treturn index(req, res);\r\n\t\r\n\treturn synonym.search(data, (result) => {\r\n\t\tres.json(result);\r\n\t});\r\n}"]}