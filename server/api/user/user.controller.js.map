{"version":3,"sources":["api/user/user.controller.js"],"names":["signIn","signOut","me","auth","req","res","console","log","body","username","password","localAuthenticate","err","user","msg","status","json","token","signToken","id","role","end"],"mappings":"AAAA;;;;;;;AAOA;;;;;QAKgBA,M,GAAAA,M;QAcAC,O,GAAAA,O;QAKAC,E,GAAAA,E;;AAtBhB;;IAAYC,I;;;;AAEZ;AACO,SAASH,MAAT,CAAgBI,GAAhB,EAAqBC,GAArB,EAA0B;AAC7B;AACAC,YAAQC,GAAR,CAAYH,IAAII,IAAJ,CAASC,QAArB,EAA+BL,IAAII,IAAJ,CAASE,QAAxC;AACAP,SAAKQ,iBAAL,CAAuBP,IAAII,IAAJ,CAASC,QAAhC,EAA0CL,IAAII,IAAJ,CAASE,QAAnD,EAA6D,UAACE,GAAD,EAAMC,IAAN,EAAYC,GAAZ,EAAoB;AAC7E,YAAG,CAACD,IAAJ,EAAS;AACL,mBAAOR,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB,CAAP;AACH,SAFD,MAEK;AACD,gBAAIG,QAAQd,KAAKe,SAAL,CAAeL,KAAKM,EAApB,EAAwBN,KAAKO,IAA7B,CAAZ;AACA,mBAAOf,IAAIW,IAAJ,CAAU,EAAEC,YAAF,EAAV,CAAP;AACH;AACJ,KAPD;AAQH;;AAED;AACO,SAAShB,OAAT,CAAiBG,GAAjB,EAAsBC,GAAtB,EAA0B;AAC7BA,QAAIW,IAAJ,CAAS,EAAT;AACH;;AAED;AACO,SAASd,EAAT,CAAYE,GAAZ,EAAiBC,GAAjB,EAAqB;AACxBA,QAAIW,IAAJ,CAASZ,IAAIS,IAAb,EAAmBQ,GAAnB;;AAEA;;;;;;;;;;;;;;;;;;;AAmBH","file":"user.controller.js","sourcesContent":["/**\r\n * 사용자 계정 관련\r\n * 자동 생성\r\n * Using Rails-like standard naming convention for endpoints.\r\n * GET     /api/users              ->  index\r\n */\r\n\r\n'use strict';\r\n\r\nimport * as auth from '../../components/auth/auth.service';\r\n\r\n// 로그인\r\nexport function signIn(req, res) {\r\n    //res.json([]);\r\n    console.log(req.body.username, req.body.password);\r\n    auth.localAuthenticate(req.body.username, req.body.password, (err, user, msg) => {\r\n        if(!user){\r\n            return res.status(401).json(msg);\r\n        }else{\r\n            var token = auth.signToken(user.id, user.role);\r\n            return res.json( { token } );\r\n        }\r\n    });\r\n}\r\n\r\n// 로그아웃\r\nexport function signOut(req, res){\r\n    res.json([]);\r\n}\r\n\r\n// 로그인 된 사용자 정보\r\nexport function me(req, res){\r\n    res.json(req.user).end();\r\n\r\n    /*return User.find({\r\n        where: {\r\n            _id: userId\r\n        },\r\n        attributes: [\r\n            '_id',\r\n            'name',\r\n            'email',\r\n            'role',\r\n            'provider'\r\n        ]\r\n    })\r\n        .then(user => { // don't ever give out the password or salt\r\n            if (!user) {\r\n                return res.status(401).end();\r\n            }\r\n            return res.json(user).end();\r\n        })\r\n        .catch(err => { next(err) });*/\r\n}"]}