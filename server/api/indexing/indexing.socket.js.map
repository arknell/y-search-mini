{"version":3,"sources":["api/indexing/indexing.socket.js"],"names":["register","events","socket","i","eventsLength","length","event","listener","createListener","IndexingEvent","on","removeListener","doc","emit"],"mappings":"AAAA;;;;;;AAMA;;;;;QAQgBA,Q,GAAAA,Q;;AANhB;;;;;;AAEA;AACA,IAAIC,SAAS,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CAAb,C,CAA4C;;AAE5C;AACO,SAASD,QAAT,CAAkBE,MAAlB,EAA0B;AAC7B;AACA,SAAK,IAAIC,IAAI,CAAR,EAAWC,eAAeH,OAAOI,MAAtC,EAA8CF,IAAIC,YAAlD,EAAgED,GAAhE,EAAqE;AACjE,YAAIG,QAAQL,OAAOE,CAAP,CAAZ;AACA,YAAII,WAAWC,eAAe,cAAcF,KAA7B,EAAoCJ,MAApC,CAAf;;AAEAO,2BAAcC,EAAd,CAAiBJ,KAAjB,EAAwBC,QAAxB;AACAL,eAAOQ,EAAP,CAAU,YAAV,EAAwBC,eAAeL,KAAf,EAAsBC,QAAtB,CAAxB;AACH;AACJ;;AAED;AACA,SAASC,cAAT,CAAwBF,KAAxB,EAA+BJ,MAA/B,EAAuC;AACnC,WAAO,UAASU,GAAT,EAAc;AACjBV,eAAOW,IAAP,CAAYP,KAAZ,EAAmBM,GAAnB,EADiB,CACQ;AAC5B,KAFD;AAGH;;AAED;AACA,SAASD,cAAT,CAAwBL,KAAxB,EAA+BC,QAA/B,EAAyC;AACrC,WAAO,YAAW;AACdE,2BAAcE,cAAd,CAA6BL,KAA7B,EAAoCC,QAApC;AACH,KAFD;AAGH","file":"indexing.socket.js","sourcesContent":["/**\r\n * 색인 Socket.IO\r\n * 설정(config/socketio.js)에서 이 파일을 등록해서 사용함\r\n * Broadcast updates to client when the model changes\r\n */\r\n\r\n'use strict';\r\n\r\nimport IndexingEvent from './indexing.event';\r\n\r\n// Model events to emit\r\nvar events = ['save', 'remove', 'update'];  // 상태 들\r\n\r\n// 소켓 등록\r\nexport function register(socket) {\r\n    // Bind model events to socket events\r\n    for (var i = 0, eventsLength = events.length; i < eventsLength; i++) {\r\n        var event = events[i];\r\n        var listener = createListener('indexing:' + event, socket);\r\n\r\n        IndexingEvent.on(event, listener);\r\n        socket.on('disconnect', removeListener(event, listener));\r\n    }\r\n}\r\n\r\n// listener 등록\r\nfunction createListener(event, socket) {\r\n    return function(doc) {\r\n        socket.emit(event, doc); // 메시지 전송\r\n    };\r\n}\r\n\r\n// listener 삭제\r\nfunction removeListener(event, listener) {\r\n    return function() {\r\n        IndexingEvent.removeListener(event, listener);\r\n    };\r\n}"]}