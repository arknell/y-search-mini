{"version":3,"sources":["api/search/search.controller.js"],"names":["index","search","searcher","require","logger","req","res","json","saveSearchWord","body","name","q","split","err","console","log","out","message","result","count","page"],"mappings":"AAAA;;;;;AAKA;;;;;QAMgBA,K,GAAAA,K;QAkBAC,M,GAAAA,M;AAtBhB,IAAIC,WAAWC,QAAQ,mCAAR,CAAf;AACA,IAAIC,SAASD,QAAQ,iCAAR,CAAb;;AAEA;AACO,SAASH,KAAT,CAAeK,GAAf,EAAoBC,GAApB,EAAyB;AAC/BA,KAAIC,IAAJ,CAAS,EAAT;AACA;;AAED;;;;;;;;;;;;;;AAcO,SAASN,MAAT,CAAgBI,GAAhB,EAAqBC,GAArB,EAA0B;AAAwB;AACxD,QAAOJ,SAASM,cAAT,CAAwBH,IAAII,IAAJ,CAASC,IAAjC,EAAuCL,IAAII,IAAJ,CAASE,CAAT,CAAWC,KAAX,CAAiB,GAAjB,CAAvC,EAA8D,UAACC,GAAD,EAAS;AAC7E,MAAIA,GAAJ,EAAS;AACRC,WAAQC,GAAR,CAAYF,GAAZ;;AAED,SAAOX,SAASD,MAAT,CAAgBI,IAAII,IAApB,EAA0B,UAAUI,GAAV,EAAeG,GAAf,EAAoB;AAAG;AACvD,OAAIH,GAAJ,EAAS;AACRT,WAAOW,GAAP,CAAW,OAAX,EAAoB,2BAA2BF,IAAII,OAAnD;AACA,WAAOX,IAAIC,IAAJ,CAAS;AACfW,aAAS,OADM;AAEfD,cAASJ,IAAII;AAFE,KAAT,CAAP;AAIA;;AAEDb,UAAOW,GAAP,CAAW,MAAX,EAAmB,sCAAsCC,IAAIG,KAA1C,GAAkD,WAAlD,GAAgEH,IAAII,IAAvF;;AAEAd,OAAIC,IAAJ,CAASS,GAAT,EAXoD,CAWJ;AAChD,GAZM,CAAP;AAaA,EAjBM,CAAP;AAkBA","file":"search.controller.js","sourcesContent":["/**\r\n * Using Rails-like standard naming convention for endpoints.\r\n * GET     /api/searchs              ->  index\r\n */\r\n\r\n'use strict';\r\n\r\nvar searcher = require('../../components/searchers/search');\r\nvar logger = require('../../components/loggers/logger');\r\n\r\n// Gets a list of Searchs\r\nexport function index(req, res) {\r\n\tres.json([]);\r\n}\r\n\r\n/**\r\n * req에 포함된 파라메터\r\n - q : 질의 Text\r\n - name : 색인 DB 명\r\n - start : 페이징 시작 index\r\n - limit : 페이징 갯수\r\n - origin : 원본 데이터 (default : ```false```)\r\n - quizInfo : 분류 내용 (class1, class2 ... 등의 분류 내용)\r\n - groupby : 그룹핑\r\n - group : 그룹문항 별로 정렬 여부\r\n - full : 검색어 전체 일치 여부 (default : ```false```, ```true```설정시 AND 검색, ```false```일 경우 약 70% 일치해야 가져옴)\r\n * @param req\r\n * @param res\r\n */\r\nexport function search(req, res) {                       // 검색 호출\r\n\treturn searcher.saveSearchWord(req.body.name, req.body.q.split(' '), (err) => {\r\n\t\tif (err) // 에러가 나도 무시함\r\n\t\t\tconsole.log(err);\r\n\t\t\r\n\t\treturn searcher.search(req.body, function (err, out) {  // 검색 호출\r\n\t\t\tif (err) {\r\n\t\t\t\tlogger.log('error', 'Search : search fail\\n' + err.message);\r\n\t\t\t\treturn res.json({\r\n\t\t\t\t\tresult:  'error',\r\n\t\t\t\t\tmessage: err.message\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlogger.log('info', 'Search : search success\\ncount - ' + out.count + \"\\npage - \" + out.page);\r\n\t\t\t\r\n\t\t\tres.json(out);                                  // 결과 리턴\r\n\t\t});\r\n\t});\r\n}"]}