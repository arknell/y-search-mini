{"version":3,"sources":["components/commons/mongo.js"],"names":["_","require","path","env","MongodbClient","MongoClient","dbName","url","idbId","idbPw","idbUrl","idbPort","conn","module","exports","open","name","doMake","resolve","reject","done","client","db","collection","err","console","log","createCollection","then","catch","connect","close","destroy","drop"],"mappings":"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","file":"mongo.js","sourcesContent":["/**\r\n * mongo db 인터페이스\r\n * ldb 모듈로부터 수정\r\n * 1. 커넥션을 관리\r\n * 2. 기본 기능 (open, close)\r\n * @author ChanWoo Kwon\r\n * date : 2017-08-14\r\n */\r\n\"use strict\";\r\nvar _ = require('lodash'),\r\n\tpath = require('path'),\r\n\tenv = require('../../config/environment');\r\n\r\nlet MongodbClient = require('mongodb').MongoClient;\r\nlet dbName = 'search';\r\nlet url = \"mongodb://\" + env.idbId + \":\" + env.idbPw + \"@\" + env.idbUrl + \":\" + env.idbPort + \"/\" + dbName;\r\n\r\nvar conn = [];                             // 현재 관리 중인 커넥션\r\n\r\nmodule.exports = {\r\n\t\r\n\t/**\r\n\t * DB 열기 및 collection check\r\n\t * @param module {string} connection 모듈당 분할\r\n\t * @param name {string} check 할 collection 이름\r\n\t * @param doMake {boolean} 없을 경우 collection 제작 여부 default : true\r\n\t */\r\n\topen:    function (module, name, doMake) {\r\n\t\tdoMake = doMake || true;\r\n\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\tlet done = function (client) {\r\n\t\t\t\treturn\tclient.db(dbName).collection(name, function (err, collection) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\t//check error\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\treturn reject(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!collection) {\r\n\t\t\t\t\t\tif (doMake == true) {\r\n\t\t\t\t\t\t\treturn client.createCollection(name)\r\n\t\t\t\t\t\t\t.then(function () {\r\n\t\t\t\t\t\t\t\treturn resolve(collection);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch(function () {\r\n\t\t\t\t\t\t\t\treturn reject(err);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn resolve(null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn resolve(collection);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif (conn[module] == null) {\r\n\t\t\t\treturn MongodbClient.connect(url, function (err, client) {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t\treturn reject(err);\r\n\t\t\t\t\t\r\n\t\t\t\t\tconn[module] = client;\r\n\t\t\t\t\treturn done(client);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn done(conn[module]);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\t// db 닫기\r\n\tclose:   function () {\r\n\t\tif (conn != null) {\r\n\t\t\tconn.close();\r\n\t\t\tconn = null;\r\n\t\t}\r\n\t},\r\n\t// collection 삭제, drop\r\n\tdestroy: function (module, name) { // 삭제 (데이터 전체 삭제)\r\n\t\tconsole.log(name);\r\n\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\tlet done = function (client) {\r\n\t\t\t\treturn\tclient.db(dbName).collection(name, function (err, collection) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\t//check error\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\treturn reject(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!collection) {\r\n\t\t\t\t\t\treturn resolve();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcollection.drop(() => {\r\n\t\t\t\t\t\t\treturn resolve();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif (conn[module] == null) {\r\n\t\t\t\treturn MongodbClient.connect(url, function (err, client) {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t\treturn reject(err);\r\n\t\t\t\t\t\r\n\t\t\t\t\tconn[module] = client;\r\n\t\t\t\t\treturn done(client);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn done(conn[module]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n};"]}