{"version":3,"sources":["components/searchers/search.js"],"names":["search","saveSearchWord","_","require","ne","util","mongodb","env","reader","synonyms","request","SimilarityChecker","similarityChecker","opts","callback","isObject","errorHandler","name","undefined","start","isNumber","parseInt","limit","isTest","quizInfo","console","log","getQuizInfoKeyword","preset","split","full","empty","count","page","list","executeSearch","err","getDocList","q","keywords","isEmpty","isCode","code","index","findIndex","o","splice","makeTest","groupby","length","message","getOrigin","result","groupBy","xs","key","reduce","rv","x","push","groupingList","combineList","concat","sort","o1","o2","sim1","parseFloat","sim","sim2","res","slice","Math","floor","origin","setSimple","group","realSim","filter","match","calRealSim","map","newO","sliced","sorting","sortedList","data","getQuizContents","getAll","alreadySliced","where","arrayRes","union","cb","open","then","collection","find","_id","skip","toArray","e","i","getQuizInfoContent","filterKey","keys","coredb","findOne","doc","parentkey","orOperation","value","child","$elemMatch","$eq","groupCollection","$or","done","testList","replaceChild","replace","matchOne","isMatch","testOne","j","item","docs","catch","pcode","core","obj","getQuizDoc","words","getDocVector","idf","quizInfoKeywords","mustpreset","dbname","size","db","promise","forEach","val","compact","searchWord","afterPreset","filterKeys","pick","word","idfOne","Array","fill","presetOrOperation","isClass","splitClass","RegExp","className","join","$regex","andOp","isEarlgae","$not","$and","first","getIdf","tfs","res2","maxobj","maxBy","largeN","ndocs","n","isUndefined","isNaN","freq","query","time","apiurl","timeEnd","tf","tfLength","after","queryToVector","docVectors","rank","ranking","occurredWord","getWord","spliter","synonymsList","inOperation","$in","quizpath","newResult","flag1","flag2","indexOf","vecSim","calSimilarityWithoutTF","info","JSON","parse","values","quizInfoOne","toLowerCase","clause","addIdKey","isCalculated","calculate","increase","quizOne","quizTwo","dbName","searchWords","bulk","initializeUnorderedBulkOp","upsert","update","$inc","execute"],"mappings":"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","file":"search.js","sourcesContent":["/**\r\n * 검색 본체\r\n * TF-IDF 참조 : https://ko.wikipedia.org/wiki/TF-IDF\r\n * 벡터공간모델 참조 : https://ko.wikipedia.org/wiki/%EB%B2%A1%ED%84%B0_%EA%B3%B5%EA%B0%84_%EB%AA%A8%EB%8D%B8\r\n * @author Saebyeok Lee, Chanwoo Kwon\r\n */\r\n'use strict';\r\nlet _ = require('lodash');\r\nlet ne = require('../commons/ne'),\r\n\tutil = require('../commons/utils'),\r\n\tmongodb = require('../commons/mongo'),\r\n\tenv = require('../../config/environment'),\r\n\treader = require('../indexers/reader'),\r\n\tsynonyms = require('../synonyms/synonym');\r\nlet request = require('request');\r\n\r\nlet SimilarityChecker = require('../similarity/SimilarityChecker');      // 코사인 유사도 계산 라이브러리\r\nlet similarityChecker = new SimilarityChecker();\r\n\r\n/**\r\n * main 검색 호출\r\n * @param opts\r\n *   - q : 질의 Text\r\n - name : 색인 DB 명\r\n - start : 페이징 시작 index (0, 1, 2, 3 ...)\r\n - limit : 페이징 갯수\r\n - isCode : 퀴즈 코드 여부 (default : ```false```)\r\n - quizInfo : 문항 필터링 정보 (default : ```null```, {\"class0\" : \"A7\", \"class1\" : \"92\", \"hard2\": \"12\", \"cmsid\" : \"1\" ...})\r\n - origin : 원본 데이터 (default : ```false```)\r\n - full : 검색어 전체 일치 여부 (default : ```false```, ```true```설정시 AND 검색, ```false```일 경우 약 70% 일치해야 가져옴)\r\n - isTest : 시험지 여부 (시험지에 포함된 문항 키워드 검색 -> 시험지와 시험지에 포함된 모든 문항을 리턴)\r\n - preset : 검색할 문항 (건너온 문항 코드에서만 단어 검색)\r\n - where : 조건문 (and, or 연산)\r\n - groupby : 그룹핑할 컬럼\r\n - group : pcode로 ordering 여부\r\n - getAll : 키워드가 없을 경우 조건에 부합하는 모든 문항을 가져올지에 관한 여부\r\n - isEarlgae : 얼개문항 여부 (default : false) (2019.02.11)\r\n - match : 일치하는 단어 가져오기 여부 (default : false) (2019.04.23)\r\n - realSim : 실제 검색어가 아닌 문항의 벡터 유사도를 비교하는 지 여부 (2019.04.26)\r\n * @param callback\r\n */\r\nexport function search(opts, callback) {\r\n\tif (!_.isObject(opts)) {\r\n\t\tutil.errorHandler('option is not a Object', callback);\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tif (opts.name === undefined) {\r\n\t\tutil.errorHandler('option.name is undefined', callback);\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tif (!opts.start) {\r\n\t\topts.start = 0;\r\n\t} else if (!_.isNumber(opts.start)) {\r\n\t\topts.start = _.parseInt(opts.start);\r\n\t}\r\n\t\r\n\tif (!opts.limit) {\r\n\t\topts.limit = 0;\r\n\t} else if (!_.isNumber(opts.limit)) {\r\n\t\topts.limit = _.parseInt(opts.limit);\r\n\t}\r\n\t\r\n\tif (!opts.isTest) {\r\n\t\topts.isTest = false;\r\n\t}\r\n\t\r\n\tif (opts.quizInfo) {\r\n\t\tconsole.log(\"quizInfo\", opts.quizInfo);\r\n\t}\r\n\t\r\n\t//calculate start\r\n\topts.start = opts.start * opts.limit;\r\n\t\r\n\tlet quizInfo = getQuizInfoKeyword(opts.quizInfo);\r\n\t\r\n\t// -- 필터링에 필요한 프리셋 문항 (정해질 경우 프리셋 문항 내에서만 키워드 검색)\r\n\tlet preset;\r\n\tif (opts.preset)\r\n\t\tpreset = opts.preset.split(/\\s*,\\s*/i);\r\n\telse\r\n\t\tpreset = undefined;\r\n\t\r\n\topts.full = opts.full || false;\r\n\tlet empty = {count: 0, page: 0, limit: opts.limit, start: opts.start, list: []};\r\n\t//console.log('opts.full', opts.full);\r\n\t\r\n\t// -- 키워드 검색을 실행\r\n\tlet executeSearch = (err, opts) => {\r\n\t\tif (err)\r\n\t\t\treturn callback(err);\r\n\t\t//console.log(preset);\r\n\t\treturn getDocList(opts, opts.q + \"\", quizInfo, preset, function (list, keywords) {\r\n\t\t\t\r\n\t\t\tconsole.log(\"db : \" + opts.name);\r\n\t\t\tconsole.log(\"text : \" + opts.q);\r\n\t\t\t//console.log(\"res : \", list);\r\n\t\t\t\r\n\t\t\tif (_.isEmpty(list)) {\r\n\t\t\t\treturn callback(null, empty);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (opts.isCode && (opts.isCode == true || opts.isCode == 'true')) {\r\n\t\t\t\tlet code = opts.code;\r\n\t\t\t\tconsole.log(\"code \", code);\r\n\t\t\t\tlet index = list.findIndex(function (o) {\r\n\t\t\t\t\treturn o[\"key\"] == code;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tlist.splice(index, 1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (opts.isTest == true) {\r\n\t\t\t\t// -- 시험지 검색 여부\r\n\t\t\t\treturn makeTest(opts, list, (err, list) => {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t\treturn console.log(err);\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn callback(null, list);\r\n\t\t\t\t});\r\n\t\t\t} else if (opts.groupby) {\r\n\t\t\t\t// -- 그룹핑 여부\r\n\t\t\t\tif (list.length > 2000) {\r\n\t\t\t\t\t// -- 시간이 오래걸리기 때문에 2000개 이상의 결과가 나올 경우 사용자에게 에러 메시지를 발송한다.\r\n\t\t\t\t\treturn callback({message: \"NEED_MORE_CLASSIFICATION\"});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn getOrigin(opts.name, list, (err, result) => {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t\treturn callback(err);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet groupBy = function (xs, key) {\r\n\t\t\t\t\t\treturn xs.reduce(function (rv, x) {\r\n\t\t\t\t\t\t\t(rv[x[key]] = rv[x[key]] || []).push(x);\r\n\t\t\t\t\t\t\treturn rv;\r\n\t\t\t\t\t\t}, {});\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet groupingList = groupBy(result, opts.groupby);\r\n\t\t\t\t\tlet combineList = [];\r\n\t\t\t\t\tfor (let key in groupingList) {\r\n\t\t\t\t\t\tcombineList = combineList.concat(groupingList[key].sort(function (o1, o2) {\r\n\t\t\t\t\t\t\tlet sim1 = parseFloat(o1.sim);\r\n\t\t\t\t\t\t\tlet sim2 = parseFloat(o2.sim);\r\n\t\t\t\t\t\t\tif (sim1 < sim2)\r\n\t\t\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t\t\telse if (sim1 > sim2)\r\n\t\t\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet res = {\r\n\t\t\t\t\t\tcount: combineList.length,\r\n\t\t\t\t\t\tlist:  _.slice(combineList, opts.start, opts.start + opts.limit),\r\n\t\t\t\t\t\tpage:  Math.floor(opts.start / opts.limit) + 1,\r\n\t\t\t\t\t\tlimit: opts.limit,\r\n\t\t\t\t\t\tstart: opts.start\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!opts.origin || (opts.origin == false || opts.origin === \"false\")) {\r\n\t\t\t\t\t\tres = setSimple(res);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn callback(null, res);\r\n\t\t\t\t});\r\n\t\t\t} else if (!opts.group || (opts.group == false || opts.group === \"false\")) {\r\n\t\t\t\t// -- 일반 검색\r\n\t\t\t\tif (opts.realSim && (opts.realSim == true || opts.realSim === \"true\")) {\r\n\t\t\t\t\tlist = list.filter((o) => {\r\n\t\t\t\t\t\treturn o.match.length > keywords.length / 2;\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn getOrigin(opts.name, list, (err, result) => {\r\n\t\t\t\t\t\tresult = calRealSim(keywords, result);\r\n\t\t\t\t\t\tresult = result.map((o) => {\r\n\t\t\t\t\t\t\tlet newO = {\r\n\t\t\t\t\t\t\t\tkey: o.key,\r\n\t\t\t\t\t\t\t\tsim: o.sim,\r\n\t\t\t\t\t\t\t\trealSim: o.realSim,\r\n\t\t\t\t\t\t\t\tmatch: o.match\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn newO;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tresult.sort((o1, o2) => {\r\n\t\t\t\t\t\t\treturn o2.realSim - o2.realSim;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet res = {\r\n\t\t\t\t\t\t\tcount: list.length,\r\n\t\t\t\t\t\t\tlist:  result,\r\n\t\t\t\t\t\t\tpage:  Math.floor(opts.start / opts.limit) + 1,\r\n\t\t\t\t\t\t\tlimit: opts.limit,\r\n\t\t\t\t\t\t\tstart: opts.start\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"total normal : \" + list.length);\r\n\t\t\t\t\tif (opts.origin === 'true' || opts.origin == true) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet sliced = _.slice(list, opts.start, opts.start + opts.limit);\r\n\t\t\t\t\t\treturn getOrigin(opts.name, sliced, (err, result) => {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tresult = calRealSim(keywords, result);\r\n\t\t\t\t\t\t\tlet res = {\r\n\t\t\t\t\t\t\t\tcount: list.length,\r\n\t\t\t\t\t\t\t\tlist:  result,\r\n\t\t\t\t\t\t\t\tpage:  Math.floor(opts.start / opts.limit) + 1,\r\n\t\t\t\t\t\t\t\tlimit: opts.limit,\r\n\t\t\t\t\t\t\t\tstart: opts.start\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn callback(null, res);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet res = {\r\n\t\t\t\t\t\t\tcount: list.length,\r\n\t\t\t\t\t\t\tlist:  _.slice(list, opts.start, opts.start + opts.limit),\r\n\t\t\t\t\t\t\tpage:  Math.floor(opts.start / opts.limit) + 1,\r\n\t\t\t\t\t\t\tlimit: opts.limit,\r\n\t\t\t\t\t\t\tstart: opts.start\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn callback(null, res);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// -- 그룹화 (pcode로 ordering)\r\n\t\t\t\t// -- 바뀌는 내용은 이정철 책임과 상의해야함\r\n\t\t\t\tif (list.length > 2000) {\r\n\t\t\t\t\treturn callback({message: \"NEED_MORE_CLASSIFICATION\"});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn getOrigin(opts.name, list, (err, result) => {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t\treturn callback(err);\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn sorting(result, (sortedList) => {\r\n\t\t\t\t\t\tlet res = {\r\n\t\t\t\t\t\t\tcount:   sortedList.length,\r\n\t\t\t\t\t\t\tdata:    _.slice(sortedList, opts.start, opts.start + opts.limit),\r\n\t\t\t\t\t\t\tresult:  \"success\",\r\n\t\t\t\t\t\t\tmessage: \"\"\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!opts.origin || (opts.origin == false || opts.origin === \"false\")) {\r\n\t\t\t\t\t\t\tres = setSimple(res);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn callback(null, res);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t\r\n\t// -- 코드 검색, 키워드 검색 여부 확인 후 실행\r\n\tlet search = () => {\r\n\t\tif (opts.isCode && (opts.isCode == true || opts.isCode == 'true')) {\r\n\t\t\t//read quiz contents\r\n\t\t\t// -- 코드 검색일 경우 코드에 해당하는 문항의 내용을 가져온다.\r\n\t\t\treturn getQuizContents(opts, executeSearch);\r\n\t\t} else {\r\n\t\t\t// -- 키워드 검색일 경우 키워드 검색 실행\r\n\t\t\treturn executeSearch(null, opts);\r\n\t\t}\r\n\t};\r\n\t\r\n\t// -- 키워드를 포함하지 않고 모든 문항을 가져오는 경우\r\n\tif ((opts.getAll == 'true' || opts.getAll == true) && opts.q.length == 0) {\r\n\t\t// -- 모든 알고리즘을 다시 정리\r\n\t\treturn getAll(opts, quizInfo, (list, count, alreadySliced) => {\r\n\t\t\t// -- 일반 검색\r\n\t\t\tconsole.log(\"total normal : \" + list.length);\r\n\t\t\tlet sliced = _.slice(list, opts.start, opts.start + opts.limit);\r\n\t\t\tif (opts.origin === 'true' || opts.origin == true) {\r\n\t\t\t\treturn getOrigin(opts.name, alreadySliced ? list : sliced, (err, result) => {\r\n\t\t\t\t\tlet res = {\r\n\t\t\t\t\t\tcount: count || list.length,\r\n\t\t\t\t\t\tlist:  result,\r\n\t\t\t\t\t\tpage:  Math.floor(opts.start / opts.limit) + 1,\r\n\t\t\t\t\t\tlimit: opts.limit,\r\n\t\t\t\t\t\tstart: opts.start\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn callback(null, res);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tlet res = {\r\n\t\t\t\t\tcount: count || list.length,\r\n\t\t\t\t\tlist:  alreadySliced ? list : sliced,\r\n\t\t\t\t\tpage:  Math.floor(opts.start / opts.limit) + 1,\r\n\t\t\t\t\tlimit: opts.limit,\r\n\t\t\t\t\tstart: opts.start\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\treturn callback(null, res);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t// -- 조건문 여부 확인\r\n\tif (opts.where) {\r\n\t\t// -- 조건문이 있을 경우 조건에 해당하는 문항 리스트를 확보\r\n\t\treturn where(opts.where, (err, res) => {\r\n\t\t\t// -- 기존 프리셋 문항 리스트와 and 연산\r\n\t\t\tif (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\treturn search();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// -- 문항 코드 정보만 가지고 있음.\r\n\t\t\tlet arrayRes = Object.keys(res);\r\n\t\t\t\r\n\t\t\t// -- 프리셋 문항으로 세팅\r\n\t\t\tif (preset == undefined) {\r\n\t\t\t\tpreset = arrayRes;\r\n\t\t\t} else {\r\n\t\t\t\t// -- 기존프리셋이 있을 경우 and 연산\r\n\t\t\t\tpreset = _.union(preset, arrayRes);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (preset.length == 0) {\r\n\t\t\t\t// -- 프리셋이 0일 경우 검색을 진행할 필요가 없음\r\n\t\t\t\treturn callback(null, empty);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// -- 검색 실행\r\n\t\t\treturn search();\r\n\t\t});\r\n\t} else {\r\n\t\t// -- 조건문이 없을 경우 검색 실행\r\n\t\treturn search();\r\n\t}\r\n}\r\n\r\nfunction getAll(opts, quizInfo, cb) {\r\n\tif (quizInfo.length == 0) {\r\n\t\treturn mongodb.open('search', opts.name, false)\r\n\t\t.then((collection) => {\r\n\t\t\tcollection.count((err, count) => {\r\n\t\t\t\treturn collection.find({}, {_id: 1}).skip(opts.start).limit(opts.limit).toArray((err, res) => {\r\n\t\t\t\t\tif (err || res == null) {\r\n\t\t\t\t\t\treturn cb([]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tres.map((e, i) => {\r\n\t\t\t\t\t\te.key = e._id;\r\n\t\t\t\t\t\te.sim = 1;\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn cb(res, count, true);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t} else {\r\n\t\treturn mongodb.open('search', opts.name + \"_posting\", false)\r\n\t\t.then((collection) => {\r\n\t\t\treturn getQuizInfoContent(opts, collection, quizInfo, undefined, (filterKey) => {\r\n\t\t\t\t// object preset to array\r\n\t\t\t\tlet keys = [];\r\n\t\t\t\tfilterKey.map((e, i) => {\r\n\t\t\t\t\tkeys.push({\r\n\t\t\t\t\t\tkey: e,\r\n\t\t\t\t\t\tsim: 1\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\treturn cb(keys);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * 문항 검색 결과를 시험지 처럼 만듬\r\n */\r\nfunction makeTest(opts, list, callback) {\r\n\tif (list.length == 0)\r\n\t\treturn callback(undefined, list);\r\n\t\r\n\tmongodb.open('search', 'coredb', false)\r\n\t.then((coredb) => {\r\n\t\treturn coredb.findOne({\"_id\": opts.name}, (err, doc) => {\r\n\t\t\tif (err || doc == null || doc.index.parentkey == undefined || doc.index.parentkey == '') {\r\n\t\t\t\t//console.log(doc);\r\n\t\t\t\treturn callback(undefined, list);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet orOperation = [];\r\n\t\t\tfor (let index in list) {\r\n\t\t\t\tlet value = list[index];\r\n\t\t\t\torOperation.push({\r\n\t\t\t\t\tchild: {\r\n\t\t\t\t\t\t$elemMatch: {\r\n\t\t\t\t\t\t\t$eq: value.key\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tmongodb.open('search', opts.name + \"_group\", false)\r\n\t\t\t.then((groupCollection) => {\r\n\t\t\t\tgroupCollection.find({\r\n\t\t\t\t\t$or: orOperation\r\n\t\t\t\t}).toArray((err, res) => {\r\n\t\t\t\t\tif (err)\r\n\t\t\t\t\t\treturn callback(err);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (res == null) {\r\n\t\t\t\t\t\treturn callback(undefined, list);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet origin = [];\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet done = () => {\r\n\t\t\t\t\t\tlet testList = [];\r\n\t\t\t\t\t\tfor (let index in res) {\r\n\t\t\t\t\t\t\tlet value = res[index];\r\n\t\t\t\t\t\t\tlet replaceChild = [];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlet match = list.filter(function (o1) {\r\n\t\t\t\t\t\t\t\treturn value.child.find(function (o2) {\r\n\t\t\t\t\t\t\t\t\t\treturn o1.key == o2;\r\n\t\t\t\t\t\t\t\t\t}) != undefined;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (let i in match) {\r\n\t\t\t\t\t\t\t\tmatch[i].key = match[i].key.replace(value._id, '');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (let i in value.child) {\r\n\t\t\t\t\t\t\t\tlet matchOne = match.find(function (o) {\r\n\t\t\t\t\t\t\t\t\treturn o.key == value.child[i].replace(value._id, '');\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treplaceChild.push({\r\n\t\t\t\t\t\t\t\t\tkey:     value.child[i].replace(value._id, ''),\r\n\t\t\t\t\t\t\t\t\tisMatch: matchOne != undefined,\r\n\t\t\t\t\t\t\t\t\tsim:     matchOne != undefined ? matchOne.sim : 0\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//console.log(match);\r\n\t\t\t\t\t\t\tlet testOne = {\r\n\t\t\t\t\t\t\t\tkey:   value._id,\r\n\t\t\t\t\t\t\t\tchild: replaceChild\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttestList.push(testOne);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn callback(undefined, testList);\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (opts.origin) {\r\n\t\t\t\t\t\t// -- 모든 문항의 상세 정보를 가져옴\r\n\t\t\t\t\t\tmongodb.open('search', opts.name, false)\r\n\t\t\t\t\t\t.then((collection) => {\r\n\t\t\t\t\t\t\tlet orOperation = [];\r\n\t\t\t\t\t\t\tfor (let i in res) {\r\n\t\t\t\t\t\t\t\tlet value = res[i];\r\n\t\t\t\t\t\t\t\tfor (let j in value.child) {\r\n\t\t\t\t\t\t\t\t\tlet item = value.child[j];\r\n\t\t\t\t\t\t\t\t\torOperation.push({_id: item.key});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcollection.find({$or: orOperation}).toArray((err, docs) => {\r\n\t\t\t\t\t\t\t\tif (err)\r\n\t\t\t\t\t\t\t\t\treturn callback(err);\r\n\t\t\t\t\t\t\t\tif (docs == null || docs.length == 0)\r\n\t\t\t\t\t\t\t\t\treturn callback(undefined, list);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\torigin = docs;\r\n\t\t\t\t\t\t\t\treturn done();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\treturn callback(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn done();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn callback(err);\r\n\t\t\t});\r\n\t\t})\r\n\t})\r\n\t.catch((err) => {\r\n\t\treturn callback(err);\r\n\t});\r\n}\r\n\r\n/**\r\n * 결과의 simple 버전\r\n * isGroup 일 때만 사용\r\n * @param res 결과\r\n * @returns {*}\r\n */\r\nfunction setSimple(res) {\r\n\tconsole.log('simple');\r\n\tlet list;\r\n\tif (res.list) {\r\n\t\tlist = res.list;\r\n\t} else {\r\n\t\tlist = res.data;\r\n\t}\r\n\t\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tlist[i] = {key: list[i].key, sim: list[i].sim, pcode: list[i].pcode};\r\n\t}\r\n\t\r\n\t//console.log(res);\r\n\treturn res;\r\n}\r\n\r\n/**\r\n * 문항 코드를 이용한 검색 시 해당 코드의 문항 본문을 가져옴\r\n * @param opts 검색 조건, quizcode 등\r\n * @param callback 콜백\r\n */\r\nfunction getQuizContents(opts, callback) {\r\n\t// 다중 코드 검색 -> 현재 미구현 (2018.01.15)\r\n\t// 코드는 ',' 로 구분하여 전송\r\n\t// 결과는 전체 리스트로 반환? -> 미정\r\n\t\r\n\treturn mongodb.open('search', 'coredb')\r\n\t.then((core) => {\r\n\t\treturn core.findOne({_id: opts.name}, (err, obj) => {\r\n\t\t\treturn reader.getQuizDoc(obj, opts.q, true, false, (err, doc, words) => {\r\n\t\t\t\tconsole.log(\"word\", words);\r\n\t\t\t\tif (err)\r\n\t\t\t\t\treturn callback(err);\r\n\t\t\t\t\r\n\t\t\t\t// -- 질의어를 문항 코드에서 문항을 구성하는 단어로 교체\r\n\t\t\t\topts.code = opts.q;\r\n\t\t\t\topts.q = words;\r\n\t\t\t\tcallback(null, opts);\r\n\t\t\t});\r\n\t\t});\r\n\t}).catch((err) => {\r\n\t\treturn console.log(err);\r\n\t});\r\n}\r\n\r\n/**\r\n * 질의어가 포함된 문항들을 가져와서 문서벡터(TF-IDF) 형태로 만들어 줌\r\n * @param opts          // 메인 함수의 opts 그대로 넘김\r\n * @param words         // 추출된 단어 배열\r\n * @param idf           // 각 단어 배열에 매칭되는 idf 값\r\n * @param quizInfoKeywords // 분류 정보\r\n * @param mustpreset    // 검색할 문항 (없을 경우 undefined)\r\n * @param callback      // 콜백\r\n */\r\nfunction getDocVector(opts, words, idf, quizInfoKeywords, mustpreset, callback) {\r\n\t\r\n\tvar dbname = opts.name;\r\n\t\r\n\tvar res = {};\r\n\tvar size = _.size(words);\r\n\t\r\n\treturn mongodb.open('search', dbname + '_posting', true)\r\n\t.then((db) => {\r\n\t\t//console.log(_.size(wordObj));\r\n\t\tvar promise = () => {\r\n\t\t\tif (size > 1 && !opts.full) {\r\n\t\t\t\t//_(res).forEach(function (val, key) {          //   { d1: [1.0, 0.7, ... ], d2 : []}\r\n\t\t\t\t//\t//console.log(val);\r\n\t\t\t\t//\tif (_.compact(val).length < Math.ceil(size / 1.5)) {\r\n\t\t\t\t//\t\tdelete res[key];\r\n\t\t\t\t//\t}\r\n\t\t\t\t//});\r\n\t\t\t} else {\r\n\t\t\t\t_(res).forEach(function (val, key) {\r\n\t\t\t\t\tif (_.compact(val).length < size) {\r\n\t\t\t\t\t\tdelete res[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//console.log(res);\r\n\t\t\treturn callback(res);\r\n\t\t};\r\n\t\t\r\n\t\tlet searchWord = [];//검색 단어 셋\r\n\t\t\r\n\t\tfor (let key in words) {\r\n\t\t\tlet val = words[key];\r\n\t\t\tsearchWord.push(key);\r\n\t\t\t\r\n\t\t\tfor (let i = 0; i < val.synonyms.length; i++) {\r\n\t\t\t\tsearchWord.push(val.synonyms[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet afterPreset = (filterKeys) => {\r\n\t\t\tif (filterKeys.length == 0) {\r\n\t\t\t\tif (quizInfoKeywords.length != 0) {\r\n\t\t\t\t\t//quizInfoKeywords 가 있는 상태에서 filterKeys 가 0일 경우 -> 분류 검색 후 결과 없음\r\n\t\t\t\t\treturn promise();\r\n\t\t\t\t} else if (mustpreset != undefined) {\r\n\t\t\t\t\tfilterKeys = mustpreset;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet orOperation = [];\r\n\t\t\t\r\n\t\t\tfor (let i = 0; i < searchWord.length; i++) {\r\n\t\t\t\torOperation.push({_id: searchWord[i]});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn db.find({$or: orOperation}).toArray(function (err, result) {     // 분수 : { quiz1 : {tf : 0.7, freq : 2}, quiz2 : {...} }\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\treturn console.log('Ooops!', err);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < result.length; i++) {\r\n\t\t\t\t\tlet obj = result[i] || {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (Object.keys(filterKeys).length != 0) {\r\n\t\t\t\t\t\t// -- filterKeys가 0일 경우 -> 전체 검색\r\n\t\t\t\t\t\tobj = _.pick(obj, filterKeys);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet word = obj._id;\r\n\t\t\t\t\tfor (let doc in obj) {\r\n\t\t\t\t\t\tif (doc == '_id')\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t// calculate tf-idf\r\n\t\t\t\t\t\t// doc is quiz code or _id\r\n\t\t\t\t\t\tlet idfOne = idf.find((o) => {\r\n\t\t\t\t\t\t\treturn o.key == word\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (idfOne != undefined) {\r\n\t\t\t\t\t\t\tobj[doc] = obj[doc] * idfOne.idf;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (res[doc] == undefined) {\r\n\t\t\t\t\t\t\t\tres[doc] = new Array(idf.length).fill(0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlet index = idf.findIndex((o) => {\r\n\t\t\t\t\t\t\t\treturn o.key == word\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tres[doc][index] = obj[doc];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn promise();\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\tif (quizInfoKeywords.length == 0) {\r\n\t\t\treturn afterPreset({});\r\n\t\t} else {\r\n\t\t\treturn getQuizInfoContent(opts, db, quizInfoKeywords, mustpreset, afterPreset);\r\n\t\t}\r\n\t})\r\n\t.catch((err) => {\r\n\t\treturn console.log(err);\r\n\t});\r\n}\r\n\r\nfunction getQuizInfoContent(opts, db, quizInfoKeywords, mustpreset, callback) {\r\n\tlet presetOrOperation = [];\r\n\tlet preset = {};\r\n\tfor (let key in quizInfoKeywords) {\r\n\t\tlet val = quizInfoKeywords[key];\r\n\t\tlet item;\r\n\t\tlet searchWord;\r\n\t\tif (val.isClass) {\r\n\t\t\tlet splitClass = val.value.split('-');\r\n\t\t\tlet index = splitClass.findIndex(function (o) {\r\n\t\t\t\treturn o == \"0\";\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tsearchWord = new RegExp(val.className + \":\" + splitClass.slice(0, index).join('-') + \".*\");\r\n\t\t} else {\r\n\t\t\tsearchWord = new RegExp(val.className + \":.*\" + val.value + \".*\");\r\n\t\t}\r\n\t\t\r\n\t\titem = {_id: {$regex: searchWord}};\r\n\t\tpresetOrOperation.push(item);\r\n\t}\r\n\t\r\n\t// 얼개 문항 검색\r\n\tlet andOp = [];\r\n\tif (opts.isEarlgae) {\r\n\t\tandOp.push({_id: 'iossection:EG'});\r\n\t} else {\r\n\t\tandOp.push({_id: {$not: {$eq: 'iossection:EG'}}});\r\n\t}\r\n\t\r\n\t//quiz info (and 및 or 구분)를 키워드화하여 무조건 해당 키워드를 포함하는 quiz를 가져와야함 (2017.07.11)\r\n\treturn db.find({$or: presetOrOperation, $and: andOp}).toArray((err, result) => {\r\n\t\tif (err) {\r\n\t\t\tpreset = {};\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn callback(preset);\r\n\t\t}\r\n\t\t//console.log(presetOrOperation, result);\r\n\t\tfor (let i = 0; i < result.length; i++) {\r\n\t\t\tlet key = result[i]._id.split(':');\r\n\t\t\t\r\n\t\t\tlet obj = result[i] || {};\r\n\t\t\tlet value = preset[key[0]];\r\n\t\t\tif (value == undefined) {\r\n\t\t\t\tpreset[key[0]] = obj;\r\n\t\t\t} else {\r\n\t\t\t\t// 'or' operation, filter by key:value pair, classlname:복소수, class4:03, class4:04, etc\r\n\t\t\t\tObject.assign(preset[key[0]], obj);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet filter = {};\r\n\t\tlet first = true;\r\n\t\t// and operation\r\n\t\t// filter by key name, classname, class3, etc\r\n\t\t// 필터 키가 없는 경우 문항코드 제거\r\n\t\tfor (let key in preset) {\r\n\t\t\tlet value = preset[key];\r\n\t\t\t\r\n\t\t\tif (first) {\r\n\t\t\t\tfilter = preset[key];\r\n\t\t\t\tfirst = false;\r\n\t\t\t} else {\r\n\t\t\t\tfilter = _.pick(filter, _.keys(value));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (mustpreset != undefined)\r\n\t\t\t\tfilter = _.pick(filter, mustpreset);\r\n\t\t}\r\n\t\t\r\n\t\tlet filterKeys = _.keys(filter);\r\n\t\treturn callback(filterKeys);\r\n\t});\r\n}\r\n\r\n/**\r\n * mongodb collection [dbname]_term에서 질의어 들에 대한 IDF 값을 계산\r\n * @param dbname    // 색인 명\r\n * @param tfs       // tf 계산한 값 {w1 : {freq : 1, tf: 0.72}, w2 : {freq : 1, tf: 0.72}}\r\n * @param callback  // 콜백\r\n */\r\nfunction getIdf(dbname, tfs, callback) {\r\n\tvar res = [];\r\n\tvar res2 = [];\r\n\t\r\n\treturn mongodb.open('search', dbname + '_term')\r\n\t.then((db) => {\r\n\t\t// 콜백  (나중에 실행됨)\r\n\t\tvar promise = function () { // tfs.length\r\n\t\t\tvar maxobj = _.maxBy(res, 'ndocs');\r\n\t\t\tvar largeN;\r\n\t\t\tif (_.isObject(maxobj) && !_.isEmpty(maxobj)) {\r\n\t\t\t\tlargeN = (maxobj.ndocs || 1) * 2;       // idf의 분자 값\r\n\t\t\t} else {\r\n\t\t\t\tlargeN = 1;\r\n\t\t\t}\r\n\t\t\t//console.log('large N '+ largeN);\r\n\t\t\t_.forEach(res, function (n, i) {\r\n\t\t\t\tif (_.isUndefined(n.ndocs)) {\r\n\t\t\t\t\tn.ndocs = 0;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tres2[i] = {key: n.key, idf: _.isNaN(Math.log(largeN / n.ndocs)) ? 1 : Math.log(largeN / n.ndocs) + 1};     // idf\r\n\t\t\t});\r\n\t\t\treturn callback(res2);         // res2 = [1.0, 0.7, ... ]\r\n\t\t};\r\n\t\t\r\n\t\tlet orOperation = [];\r\n\t\t\r\n\t\tfor (let key in tfs) {\r\n\t\t\torOperation.push({_id: key});\r\n\t\t}\r\n\t\t\r\n\t\treturn db.find({$or: orOperation}).toArray(function (err, result) { //db            ex) key = '최빈값'\r\n\t\t\tif (err) {\r\n\t\t\t\treturn console.log('Ooops!', err);\r\n\t\t\t}\r\n\t\t\tfor (let key in tfs) {\r\n\t\t\t\tlet obj = result.find((o) => {\r\n\t\t\t\t\treturn o._id == key;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tif (obj) {\r\n\t\t\t\t\tres.push({key: obj._id, ndocs: obj.ndocs, freq: obj.freq});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tres.push({key: key, ndocs: 1, freq: 1});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn promise();\r\n\t\t});\r\n\t})\r\n\t.catch((err) => {\r\n\t\tconsole.log(err);\r\n\t});\r\n}\r\n\r\n/**\r\n * TF-IDF 값으로 질의와 각 문서간의 cosine 유사도를 계산\r\n *\r\n * TF-IDF 참조 : https://ko.wikipedia.org/wiki/TF-IDF\r\n * @param opts\r\n * @param query\r\n * @param quizInfoKeywords\r\n * @param preset\r\n * @param callback\r\n */\r\nfunction getDocList(opts, query, quizInfoKeywords, preset, callback) {\r\n\t\r\n\tvar dbname = opts.name;\r\n\t\r\n\tconsole.time('ne');\r\n\t// 색인어 추출기 ex) 분수를 사용한 최빈값 구하기 --> 분수, 사용, 최빈값 , ...\r\n\tmongodb.open('search', 'coredb', false)\r\n\t.then((collection) => {\r\n\t\tcollection.findOne({_id: dbname}, (err, core) => {\r\n\t\t\tif (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\treturn callback([]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn ne(core.apiurl, query)\r\n\t\t\t.then((keywords) => {\r\n\t\t\t\tif (keywords.length == 0)\r\n\t\t\t\t\tkeywords.push(query);\r\n\t\t\t\t\r\n\t\t\t\tconsole.log(query);\r\n\t\t\t\tconsole.log(keywords);\r\n\t\t\t\tconsole.timeEnd('ne');\r\n\t\t\t\t\r\n\t\t\t\tif (keywords.length == 0) {\r\n\t\t\t\t\tcallback([]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.time('freq');\r\n\t\t\t\t\tvar tf = util.tf(keywords, 'freq');\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet tfLength = Object.keys(tf).length;\r\n\t\t\t\t\tconsole.timeEnd('freq');\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet done = _.after(tfLength, () => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn getIdf(dbname, tf, function (idf) {       // idf = [1.02, 0.67, ...  ]\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar q = util.queryToVector(tf, idf);        // tf*idf [1.32, 0.73, 9.33, ... ]\r\n\t\t\t\t\t\t\tconsole.time('search');\r\n\t\t\t\t\t\t\treturn getDocVector(opts, tf, idf, quizInfoKeywords, preset, function (docVectors) {\r\n\t\t\t\t\t\t\t\tconsole.timeEnd('search');\r\n\t\t\t\t\t\t\t\tvar rank = util.ranking(q, docVectors);\r\n\t\t\t\t\t\t\t\tif (opts.match) {\r\n\t\t\t\t\t\t\t\t\tfor (let i = 0; i < rank.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\tlet key = rank[i].key;\r\n\t\t\t\t\t\t\t\t\t\tlet idfOne = docVectors[key];\r\n\t\t\t\t\t\t\t\t\t\tlet occurredWord = [];\r\n\t\t\t\t\t\t\t\t\t\tfor (let j = 0; j < idfOne.length; j++) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet word = idf[j].key;\r\n\t\t\t\t\t\t\t\t\t\t\tif (idfOne[j] != 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\toccurredWord.push(word);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\trank[i].match = occurredWord;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//\tconsole.log(rank);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn callback(rank, keywords);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t//검색에 유사어 추가 (2017.06.07)\r\n\t\t\t\t\tfor (let key in tf) {\r\n\t\t\t\t\t\tsynonyms.getWord(key, (result) => {\r\n\t\t\t\t\t\t\tlet spliter = result.split(';');\r\n\t\t\t\t\t\t\tlet synonymsList = [];\r\n\t\t\t\t\t\t\tfor (let j = 0; j < spliter.length; j++) {\r\n\t\t\t\t\t\t\t\tif (spliter[j] !== '')\r\n\t\t\t\t\t\t\t\t\tsynonymsList.push(spliter[j]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttf[key] = {'count': tf[key], 'synonyms': synonymsList};\r\n\t\t\t\t\t\t\treturn done();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\treturn callback([]);\r\n\t\t\t});\r\n\t\t});\r\n\t})\r\n\t.catch((err) => {\r\n\t\tcallback([]);\r\n\t});\r\n\t\r\n}\r\n\r\n/**\r\n * opts에 origin 옵션의 true일 경우\r\n * 복사한 db에서 정보를 가져옴\r\n * @param dbname\r\n * @param res\r\n * @param callback\r\n */\r\nfunction getOrigin(dbname, res, callback) {\r\n\treturn mongodb.open('search', dbname)\r\n\t.then((db) => {\r\n\t\tlet inOperation = [];\r\n\t\t\r\n\t\tfor (let key in res) {\r\n\t\t\tlet value = res[key];\r\n\t\t\t\r\n\t\t\tinOperation.push(value.key);\r\n\t\t}\r\n\t\t\r\n\t\treturn db.find({_id: {$in: inOperation}}).toArray(function (err, result) {\r\n\t\t\tif (err) {\r\n\t\t\t\treturn console.log('Ooops!', err);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let i = 0; i < result.length; i++) {\r\n\t\t\t\tlet doc = result[i];\r\n\t\t\t\tlet n = res.find(function (o) {\r\n\t\t\t\t\tif (o.key == doc._id)\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tdoc.key = n.key;\r\n\t\t\t\tdoc.sim = n.sim;\r\n\t\t\t\tdoc.match = n.match;\r\n\t\t\t\t\r\n\t\t\t\tfor (let key in doc) {\r\n\t\t\t\t\tif (key.search('quizpath') != -1) {\r\n\t\t\t\t\t\tdoc.quizpath = doc[key];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tresult[i] = doc;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet newResult = [];\r\n\t\t\t\r\n\t\t\tfor (let key in res) {\r\n\t\t\t\tlet value = res[key];\r\n\t\t\t\tlet item = result.find(function (o) {\r\n\t\t\t\t\treturn o._id == value.key\r\n\t\t\t\t});\r\n\t\t\t\t//console.log('sorting in origin', value, item);\r\n\t\t\t\tif (item != undefined)\r\n\t\t\t\t\tnewResult.push(item);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn callback(null, newResult);\r\n\t\t});\r\n\t})\r\n\t.catch((err) => {\r\n\t\treturn console.log(err);\r\n\t});\r\n}\r\n\r\nfunction calRealSim(words, list) {\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tlet item = list[i];\r\n\t\t\r\n\t\tif (!item.tf) {\r\n\t\t\titem.realSim = -1;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\t\r\n\t\tlet tf = Object.keys(item.tf);\r\n\t\tlet flag1 = false, flag2 = false;\r\n\t\ttf = tf.filter((o) => {\r\n\t\t\tif (o.indexOf(':') != -1) {\r\n\t\t\t\tflag1 = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (flag1 && o.indexOf(':') == -1) {\r\n\t\t\t\tflag2 = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn flag2;\r\n\t\t});\r\n\t\t\r\n\t\titem.vecSim = similarityChecker.calSimilarityWithoutTF(words, tf);\r\n\t}\r\n\t\r\n\treturn list;\r\n}\r\n\r\nfunction getQuizInfoKeyword(quizInfo) {\r\n\tif (quizInfo == undefined)\r\n\t\treturn [];\r\n\t\r\n\tlet quizInfoKeywords = [];\r\n\t\r\n\tif (typeof quizInfo === \"string\") {\r\n\t\ttry {\r\n\t\t\tvar info = JSON.parse(quizInfo);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('quiz info is not json format');\r\n\t\t\treturn [];\r\n\t\t}\r\n\t} else {\r\n\t\tinfo = quizInfo;\r\n\t}\r\n\t\r\n\tfor (let key in info) {\r\n\t\tlet values = info[key];\r\n\t\t\r\n\t\tvalues = values.split(/\\s*,\\s*/);\r\n\t\t\r\n\t\tfor (let index in values) {\r\n\t\t\tlet quizInfoOne = values[index];\r\n\t\t\tif (quizInfoOne.split('-').length == 12) {\r\n\t\t\t\t//is classa\r\n\t\t\t\tquizInfoKeywords.push({\r\n\t\t\t\t\tclassName: key.toLowerCase(),\r\n\t\t\t\t\tvalue:     quizInfoOne,\r\n\t\t\t\t\tisClass:   true\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tquizInfoKeywords.push({\r\n\t\t\t\t\tclassName: key.toLowerCase(),\r\n\t\t\t\t\tvalue:     values[index],\r\n\t\t\t\t\tisClass:   false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn quizInfoKeywords;\r\n}\r\n\r\nfunction where(clause, callback) {\r\n\treturn mongodb.open(\"search\", \"su_quizdoc_posting\", false)\r\n\t.then((collection) => {\r\n\t\treturn addIdKey(clause, collection, (err, res) => {\r\n\t\t\tif (err)\r\n\t\t\t\treturn callback(err);\r\n\t\t\treturn callback(undefined, res);\r\n\t\t});\r\n\t})\r\n\t.catch((err) => {\r\n\t\treturn callback(err);\r\n\t});\r\n}\r\n\r\nfunction addIdKey(obj, db, callback) {\r\n\t// -- key 는 무조건 하나\r\n\tlet key = Object.keys(obj)[0];\r\n\tlet value = obj[key];\r\n\tlet res = {};\r\n\tlet isCalculated = false;\r\n\tlet done = _.after(value.length, () => {\r\n\t\treturn callback(undefined, res);\r\n\t});\r\n\t\r\n\tfor (let index in value) {\r\n\t\tlet filterKey = value[index];\r\n\t\t// -- or, and operation 계산\r\n\t\tlet calculate = (err, result) => {\r\n\t\t\tif (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\treturn done();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (isCalculated == false) {\r\n\t\t\t\tres = result;\r\n\t\t\t\tisCalculated = true;\r\n\t\t\t\treturn done();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (key == \"$and\") {\r\n\t\t\t\t// -- and 연산\r\n\t\t\t\tres = _.pick(res, _.keys(result));\r\n\t\t\t} else if (key == \"$or\") {\r\n\t\t\t\t// -- or 연산\r\n\t\t\t\tObject.assign(res, result);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn done();\r\n\t\t};\r\n\t\t\r\n\t\tif (typeof filterKey == 'string') {\r\n\t\t\t// -- search db\r\n\t\t\tdb.find({_id: filterKey}).toArray((err, result) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\treturn calculate(err);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (result.length == 0) {\r\n\t\t\t\t\treturn calculate(undefined, {});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdelete  result[0]._id;\r\n\t\t\t\treturn calculate(undefined, result[0]);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// -- recursive\r\n\t\t\treturn addIdKey(filterKey, db, calculate);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * 유사도 정렬을 방해하지 않으면서 pcode가 같은 경우 모아주는 알고리즘 O(n logn)\r\n * @param list\r\n * @param callback\r\n * @returns {*}\r\n */\r\nfunction sorting(list, callback) {\r\n\t\r\n\tlet increase;\r\n\tfor (let i = 0; i < list.length; i += increase) {\r\n\t\tincrease = 1;\r\n\t\tlet quizOne = list[i];\r\n\t\tif (quizOne.pcode == '')\r\n\t\t\tcontinue;\r\n\t\t\r\n\t\tfor (let j = i; j < list.length; j++) {\r\n\t\t\tlet quizTwo = list[j];\r\n\t\t\t\r\n\t\t\tif (quizTwo.pcode == '')\r\n\t\t\t\tcontinue;\r\n\t\t\t\r\n\t\t\tif (quizOne.pcode == quizTwo.pcode) {\r\n\t\t\t\tlist.splice(i, 0, quizTwo);\r\n\t\t\t\tlist.splice(j, 1);\r\n\t\t\t\tincrease++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn callback(list);\r\n}\r\n\r\n/**\r\n * 사용자 검색 내역 저장\r\n * 실제 검색되는 키워드가 아닌 사용자가 직접 입력한 검색어 저장 (실험용, 2017.10.30)\r\n * @param dbName\r\n * @param searchWords\r\n * @param cb\r\n * @returns {*}\r\n */\r\nexport function saveSearchWord(dbName, searchWords, cb) {\r\n\treturn mongodb.open('search', dbName + \"_search\", true)\r\n\t.then((collection) => {\r\n\t\tlet bulk = collection.initializeUnorderedBulkOp();\r\n\t\t\r\n\t\tfor (let key in searchWords) {\r\n\t\t\tlet val = searchWords[key];\r\n\t\t\tbulk.find({_id: val}).upsert().update({$inc: {'term': 1}});\r\n\t\t}\r\n\t\t\r\n\t\treturn bulk.execute()\r\n\t\t.then(() => {\r\n\t\t\treturn cb();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\treturn cb(err);\r\n\t\t});\r\n\t})\r\n\t.catch((err) => {\r\n\t\treturn cb(err);\r\n\t});\r\n}"]}