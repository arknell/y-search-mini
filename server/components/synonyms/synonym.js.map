{"version":3,"sources":["components/synonyms/synonym.js"],"names":["save","getAllWord","remove","search","getWord","ldb","require","logger","_","words","open","then","wordDb","i","word","synonyms","done","after","length","log","toString","findOne","_id","err","res","value","wordList","push","synonymsList","split","undefined","replace","spliter","removeNet","message","synonymItem","trim","saveNet","catch","wordDB","find","toArray","result","json","deleteOne","callback","wordNetDB","notFound","manager","mainWord","wordNetDb","key","j"],"mappings":"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","file":"synonym.js","sourcesContent":["/**\r\n * Created by KCW on 2017-06-05.\r\n * 사용 db\r\n *   - word : 유사어 목록 (관리용)\r\n *   - word_net : 유사어 네트워크 구성\r\n * @author ChanWoo Kwon\r\n */\r\n\r\n\"use strict\";\r\n\r\nconst ldb = require('../commons/mongo');\r\nlet logger = require('../../components/loggers/logger');\r\nvar _ = require('lodash');\r\n\r\n/**\r\n * 웹에서 설정한 유사어를 db에 저장\r\n * 2017.06.05\r\n * ChanWoo Kwon\r\n * @param words\r\n */\r\nexport function save(words) {\r\n\treturn ldb.open('synonym', 'word')\r\n\t.then((wordDb) => {\r\n\t\tfor (let i = 0; i < words.length; i++) {\r\n\t\t\tlet word = words[i];\r\n\t\t\t\r\n\t\t\tif (word.word === '' || word.synonyms === '') {\r\n\t\t\t\t//do nothing when key or value is empty\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//callback function\r\n\t\t\tlet done = _.after(word.length, () => {\r\n\t\t\t\treturn logger.log('info', 'save synonyms ' + word.toString() + ' is success');\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t//유효성 검사 구현 (2017.06.07)\r\n\t\t\t//synonym 수정 시 갱신\r\n\t\t\twordDb.findOne({_id: word.word}, (err, res) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\treturn logger.log('error', 'find synonyms is fail');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet value = word.synonyms;\r\n\t\t\t\tlet wordList = [];\r\n\t\t\t\twordList.push(word.word);\r\n\t\t\t\t\r\n\t\t\t\tlet synonymsList = value.split(';');\r\n\t\t\t\t\r\n\t\t\t\tif (res !== undefined && res != null) {\r\n\t\t\t\t\tfor (let i = 0; i < synonymsList.length; i++) {\r\n\t\t\t\t\t\tres.synonyms = res.synonyms.replace(synonymsList[i], '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet spliter = res.synonyms.split(';');\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < spliter.length; i++) {\r\n\t\t\t\t\t\tif (spliter[i] !== '') {\r\n\t\t\t\t\t\t\tremoveNet(spliter[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tword._id = word.word;\r\n\t\t\t\t\r\n\t\t\t\treturn wordDb.save(word, (err) => {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\treturn logger.log('error', 'Create : create core database fail\\n' + err.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < synonymsList.length; i++) {\r\n\t\t\t\t\t\tlet synonymItem = synonymsList[i];\r\n\t\t\t\t\t\tif (synonymItem.trim() === '')\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\twordList.push(synonymItem.trim());\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn saveNet(wordList, word.word, done);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t})\r\n\t.catch((err) => {\r\n\t\treturn logger.log('error', err.message);\r\n\t});\r\n}\r\n\r\n/**\r\n * 웹에서 설정한 유사어 목록을 read\r\n * @param res\r\n */\r\nexport function getAllWord(res) {\r\n\treturn ldb.open('synonym', 'word')\r\n\t.then((wordDB) => {\r\n\t\t\r\n\t\twordDB.find().toArray((err, result) => {\r\n\t\t\tif (result == null)\r\n\t\t\t\treturn res.json([]);\r\n\t\t\t\r\n\t\t\treturn res.json(result);\r\n\t\t});\r\n\t})\r\n\t.catch((err) => {\r\n\t\treturn logger.log('error', err.message);\r\n\t});\r\n}\r\n\r\n/**\r\n * 유사어 목록에서 제거\r\n * @param word\r\n */\r\nexport function remove(word) {\r\n\treturn ldb.open('synonym', 'word')\r\n\t.then((wordDB) => {\r\n\t\treturn wordDB.findOne({_id: word}, (err, res) => {\r\n\t\t\tif (err) {\r\n\t\t\t\treturn logger.log('error', 'delete ' + word + \"' is fail\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twordDB.deleteOne({_id: word}, (err) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\treturn logger.log('error', 'delete ' + word + \"' is fail\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tremoveNet(word);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tlet synonymsList = res.synonyms.split(';');\r\n\t\t\t\r\n\t\t\tfor (let i = 0; i < synonymsList.length; i++) {\r\n\t\t\t\tlet synonymItem = synonymsList[i];\r\n\t\t\t\tif (synonymItem.trim() === '')\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t\r\n\t\t\t\tremoveNet(synonymItem.trim());\r\n\t\t\t}\r\n\t\t});\r\n\t})\r\n\t.catch((err) => {\r\n\t\treturn logger.log('error', err.message);\r\n\t});\r\n\t\r\n}\r\n\r\nexport function search(word, callback) {\r\n\treturn ldb.open('synonym', 'word_net')\r\n\t.then((wordNetDB) => {\r\n\t\treturn wordNetDB.findOne({_id: word}, (err, res) => {\r\n\t\t\tif (err) {\r\n\t\t\t\tif (err.notFound) {\r\n\t\t\t\t\treturn callback('');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn logger.log('error', 'read word_net Fail' + err);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tldb.open('synonym', 'word').then((wordDB) => {\r\n\t\t\t\treturn wordDB.findOne({_id: res.manager}, (err, res) => {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\treturn logger.log('error', 'read word Fail' + err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (res == null) {\r\n\t\t\t\t\t\treturn callback('');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn callback([res]);\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\treturn logger.log('error', err.message);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t});\r\n\t})\r\n\t.catch((err) => {\r\n\t\treturn logger.log('error', err.message);\r\n\t});\r\n}\r\n\r\nexport function getWord(word, callback) {\r\n\treturn ldb.open('synonym', 'word_net')\r\n\t.then((wordNetDB) => {\r\n\t\treturn wordNetDB.findOne({_id: word}, (err, res) => {\r\n\t\t\tif (err) {\r\n\t\t\t\treturn logger.log('error', 'read word_net fail');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//word가 유사어 네트워크에 존재하지 않을 경우 빈 문자 반환\r\n\t\t\tif (res == null)\r\n\t\t\t\treturn callback('');\r\n\t\t\t\r\n\t\t\treturn callback(res.synonyms);\r\n\t\t});\r\n\t})\r\n\t.catch((err) => {\r\n\t\treturn logger.log('error', err.message);\r\n\t});\r\n\t\r\n}\r\n\r\n/**\r\n * word_net\r\n * 유사어 검색 기능 때문에 추가 (2017.06.12)\r\n *  key : 단어\r\n *  value {\r\n *      synonyms : 유사어목록 (;로 구분)\r\n *      manager  : word db에 저장될 때의 관리 단어\r\n *  }\r\n * @param wordList\r\n * @param mainWord\r\n * @param callback\r\n */\r\nlet saveNet = function (wordList, mainWord, callback) {\r\n\treturn ldb.open('synonym', 'word_net')\r\n\t.then((wordNetDb) => {\r\n\t\t\r\n\t\tlet done = _.after(wordList.length, () => {\r\n\t\t\treturn callback();\r\n\t\t});\r\n\t\t\r\n\t\tfor (let i = 0; i < wordList.length; i++) {\r\n\t\t\tlet value = '';\r\n\t\t\tlet key = wordList[i];\r\n\t\t\tfor (let j = 0; j < wordList.length; j++) {\r\n\t\t\t\tif (i != j)\r\n\t\t\t\t\tvalue += wordList[j] + ';';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//manager 단어와 key, value 저장\r\n\t\t\twordNetDb.save({\r\n\t\t\t\t_id: key,\r\n\t\t\t\tsynonyms: value.trim(),\r\n\t\t\t\tmanager:  mainWord\r\n\t\t\t}, (err) => {\r\n\t\t\t\tif (err)\r\n\t\t\t\t\treturn logger.log('error', 'save \\'' + key + ':' + value + '\\' is fail');\r\n\t\t\t\t\r\n\t\t\t\treturn done();\r\n\t\t\t});\r\n\t\t}\r\n\t})\r\n\t.catch((err) => {\r\n\t\treturn logger.log('error', err.message);\r\n\t});\r\n};\r\n\r\nlet removeNet = function (word) {\r\n\treturn ldb.open('synonym', 'word_net')\r\n\t.then((wordNetDB) => {\r\n\t\treturn wordNetDB.deleteOne({_id: word});\r\n\t})\r\n\t.catch((err) => {\r\n\t\treturn logger.log('error', err.message);\r\n\t});\r\n};"]}