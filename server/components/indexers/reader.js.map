{"version":3,"sources":["components/indexers/reader.js"],"names":["one","withoutFileOne","doIndexing","getQuizDoc","readDataOne","stream","mongodb","require","util","ne","adder","_","mp","fs","logger","separator","opts","cb","res","parentKey","undefined","done","after","name","forEach","keys","keyOne","i","err","doc","body","docdb","paraParentKey","math","console","log","apiurl","parentkey","bodies","split","words","tokenizeStr","length","quizInfoList","push","mathExpList","then","word","concat","tf","_isIndexed","save","message","catch","onlyContent","onlyMetaInfo","isNull","isObject","errorHandler","open","_id","findOne","index","columns","isFile","textKeys","map","filter","o","type","quizInfoKey","files","_key","getTextData","getTextDataWithTag","quizBody","fileCnt","afterFile","filepath","postfix","useScript","r","item","eval","script","getTextFromFile","txt","indexOf","toAbstract","data","join","str","n","value","toUpperCase","toString","replace","toLowerCase","db","core","count","last","cnt","readCnt","ignoredCnt","timeEnd","time","s","lastKey","find","$gt","sort","limit","toArray","result","end","getData"],"mappings":"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","file":"reader.js","sourcesContent":["/**\r\n * @author Saebyeok Lee\r\n * @since 0.1.1\r\n */\r\n'use strict';\r\nvar mongodb = require('../commons/mongo'),\r\n\tutil = require('../commons/utils'),\r\n\tne = require('../commons/ne'),\r\n\tadder = require('./adder'),\r\n\t_ = require('lodash'),\r\n\tmp = require('../commons/MathParser');\r\n\r\nvar fs = require('fs');\r\n\r\nvar logger = require('../loggers/logger');\r\n\r\nexport let separator = '-----------quizinfo-----------';\r\n/**\r\n * 단위 색인, 증분 색인\r\n * @param opts  // core의 내용\r\n * @param cb    // callback\r\n */\r\nexport function one(opts, cb) {\r\n\tlet res = [];\r\n\tlet parentKey = undefined;\r\n\tlet done = _.after(1, () => {\r\n\t\treturn adder(res, {name: opts.name, parentKey: parentKey}, () => {\r\n\t\t\treturn cb(null);\r\n\t\t})\r\n\t});\r\n\t\r\n\treturn _.forEach(opts.keys, (keyOne, i) => {\r\n\t\t\r\n\t\treturn getQuizDoc(opts, keyOne, false, false, (err, doc, body, docdb, paraParentKey, math) => {\r\n\t\t\tif (err) {\r\n\t\t\t\tconsole.log('getQuizDoc - indexing one ', err);\r\n\t\t\t\treturn cb(err);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tparentKey = paraParentKey;\r\n\t\t\treturn doIndexing(opts.apiurl, doc, body, docdb, res, math, done);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport function withoutFileOne(opts, cb) {\r\n\treturn _.forEach(opts.keys, (keyOne, i) => {\r\n\t\treturn getQuizDoc(opts, keyOne, false, true, (err, doc, body, docdb, parentkey) => {\r\n\t\t\t//console.log(body);\r\n\t\t\tif (err) {\r\n\t\t\t\tconsole.log('getQuizDoc - indexing one ', err);\r\n\t\t\t\treturn cb(err);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn cb(null, body);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport function doIndexing(apiurl, doc, body, docdb, res, math, done) {\r\n\tlet bodies = body.split(separator);\r\n\tlet words = [];\r\n\tlet tokenizeStr = \"\";\r\n\t//문항 메타 정보 (indexing text) -> 차후 업데이트 필요\r\n\tif (bodies.length > 0) {\r\n\t\ttokenizeStr += bodies[0];\r\n\t}\r\n\t\r\n\t//문항 분류 정보 (quiz info)\r\n\tif (bodies.length > 1) {\r\n\t\t\r\n\t\tlet quizInfoList = bodies[1].split(/[\\n.]/);\r\n\t\t\r\n\t\t//빈 칸일 경우를 제외하여 입력\r\n\t\tfor (let i = 0; i < quizInfoList.length; i++) {\r\n\t\t\tif (quizInfoList[i] != '')\r\n\t\t\t\twords.push(quizInfoList[i]);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// 문항 본문\r\n\tif (bodies.length >= 3) {\r\n\t\ttokenizeStr += \". \" + bodies[2];\r\n\t}\r\n\t\r\n\t// 문항의 수식\r\n\tif (bodies.length >= 4) {\r\n\t\tlet mathExpList = bodies[3].split(/[\\n.]/);\r\n\t\t\r\n\t\t//빈 칸일 경우를 제외하여 입력\r\n\t\tfor (let i = 0; i < mathExpList.length; i++) {\r\n\t\t\tif (mathExpList[i] != '')\r\n\t\t\t\twords.push(\"math:\" + mathExpList[i]);\r\n\t\t}\r\n\t}\r\n\t\r\n\tne(apiurl, tokenizeStr)\r\n\t.then((word) => {\r\n\t\twords = words.concat(word);\r\n\t\t//console.log(tokenizeStr);\r\n\t\t//console.log(word);\r\n\t\tdoc.tf = util.tf(words);\r\n\t\t//\tconsole.log(doc.tf);\r\n\t\t\r\n\t\tif (math) {\r\n\t\t\t// 수식\r\n\t\t\tdoc.math = math;\r\n\t\t}\r\n\t\t//console.log(\"doc\", doc);\r\n\t\tres.push(doc);\r\n\t\t\r\n\t\tdoc._isIndexed = true;          // 색인 여부 추가\r\n\t\t//\\media\\teamsdata\\Earlgae2014\\01\\92\\019238\\quizdata\\2017\\05\\22\\438399B26742499C9D4B60588A8E4E99\\438399B26742499C9D4B60588A8E4E99_MATH.txt\r\n\t\t\r\n\t\tdocdb.save(doc, (err) => {     // 색인될 tf 값을 저장 --> 추후 색인 수정시 반영을 위함\r\n\t\t\tif (err) {\r\n\t\t\t\treturn logger.log(\"error\", err.message);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn done();\r\n\t\t});\r\n\t})\r\n\t.catch((err) => {\r\n\t\treturn logger.log(\"error\", err.message);\r\n\t})\r\n}\r\n\r\n/**\r\n *\r\n * @param opts 문항 조건\r\n * @param keyOne 문항 key\r\n * @param onlyContent 본문만 가져올 것인지 여부\r\n * @param onlyMetaInfo 메타 정보만 가져올 것인지 여부\r\n * @param after\r\n * @returns {*}\r\n */\r\nexport function getQuizDoc(opts, keyOne, onlyContent, onlyMetaInfo, after) {\r\n\topts = opts || null;\r\n\t\r\n\tif (_.isNull(opts) || !_.isObject(opts)) {\r\n\t\tutil.errorHandler('reader option is not defined', after);\r\n\t\treturn;\r\n\t}\r\n\t//console.log(opts._id);\r\n\treturn mongodb.open('index', opts._id, false)\r\n\t.then((docdb) => {\r\n\t\treturn docdb.findOne({_id: keyOne}, (err, doc) => {\r\n\t\t\tif (err) {\r\n\t\t\t\tlogger.log(\"error\", err.message);\r\n\t\t\t\treturn after(err);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (doc == null) {\r\n\t\t\t\treturn after({message: \"code is not found : \" + keyOne});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn readDataOne(opts.apiurl, doc, docdb, opts.index.columns, onlyContent, onlyMetaInfo, after);\r\n\t\t});\r\n\t})\r\n\t.catch((err) => {\r\n\t\t\r\n\t});\r\n}\r\n\r\nexport function readDataOne(apiurl, doc, docdb, columns, onlyContent, onlyMetaInfo, cb) {\r\n\t\r\n\t//2017.01.23 open DB 수정 (없는 db일 경우 생성하지 않음)\r\n\tif (docdb == null) {\r\n\t\tconsole.log(\"wrong ldb\");\r\n\t\treturn cb({message: 'wrong ldb'});\r\n\t}\r\n\t\r\n\tlet isFile = false;\r\n\tlet textKeys = _.map(_.filter(columns, function (o) {\r\n\t\treturn o.type == \"text\" && (o.name != 'quizbody' && o.name != 'QUIZBODY');\r\n\t}), 'name');\r\n\t//분류정보를 인덱싱 (2017.07.10)\r\n\t//text 또한 분류 정보로 인식, text의 경우 사용자 질의에서도 검색 가능, quizinfo는 오직 분류 검색에서만 가능 (2017.08.30)\r\n\t// quiz body is content => do not index for text data & text data with tag\r\n\tlet quizInfoKey = _.map(_.filter(columns, function (o) {\r\n\t\treturn (o.type == \"info\" || o.type == \"text\") && (o.name != 'quizbody' && o.name != 'QUIZBODY');\r\n\t}), 'name');\r\n\t\r\n\tlet parentKey = _.map(_.filter(columns, {type: 'parentkey'}), 'name')[0];\r\n\t\r\n\tlet files = _.filter(columns, {type: 'filepath'});\r\n\t//var keyName = opts.core.index.pk;\r\n\t\r\n\tif (files.length > 0) {\r\n\t\tisFile = true;\r\n\t\t//files = files[0];\r\n\t}\r\n\t\r\n\tvar body = '';\r\n\tlet math = undefined;\r\n\t\r\n\tdoc._key = doc._id;\r\n\t\r\n\t//문항 내용만 가져올 경우에는 메타정보, 문항 정보가 필요 없음\r\n\tif (onlyContent == false || onlyMetaInfo == true) {\r\n\t\tbody = body + ' \\n ' + getTextData(textKeys, doc);\r\n\t\tbody = body + ' \\n ' + getTextDataWithTag(quizInfoKey, doc);\r\n\t\t\r\n\t\t// -- 문항 메타정보만 가져올 경우에는 파일을 읽을 필요가 없음\r\n\t\tif (onlyMetaInfo == true)\r\n\t\t\treturn cb(null, doc, body, docdb, parentKey, math);\r\n\t}\r\n\t\r\n\tlet quizBody = doc[\"quizbody\"] || doc[\"QUIZBODY\"];\r\n\t\r\n\tif (quizBody) {\r\n\t\tbody = body + ' \\n ' + quizBody;\r\n\t}\r\n\t\r\n\tif (isFile) {\r\n\t\tlet fileCnt = files.length;\r\n\t\t//console.log(fileCnt);\r\n\t\tlet afterFile = _.after(fileCnt, (body) => {\r\n\t\t\t//return console.log(after);\r\n\t\t\t//console.log(body);\r\n\t\t\treturn cb(null, doc, body, docdb, parentKey, math);\r\n\t\t});\r\n\t\t\r\n\t\tfor (let i = 0; i < fileCnt; i++) {\r\n\t\t\tlet filepath = doc[files[i].name] + (files[i].postfix || '');\r\n\t\t\tdoc['quizcode'] = doc['QUIZCODE'];\r\n\t\t\t// load and run script form db\r\n\t\t\tif (files[i].useScript) {\r\n\t\t\t\tlet r = filepath;\r\n\t\t\t\tlet item = files[i];\r\n\t\t\t\t\r\n\t\t\t\teval(files[i].script);\r\n\t\t\t\t\r\n\t\t\t\tfilepath = r;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tutil.getTextFromFile(apiurl, filepath, (err, txt) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\treturn afterFile(body);\r\n\t\t\t\t}\r\n\t\t\t\t// -- 수식 인덱싱 기능 추가 필요 (2018.05.14)\r\n\t\t\t\tif (filepath.indexOf('_MATH') != -1) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tmp.toAbstract(apiurl, txt.split('\\n'))\r\n\t\t\t\t\t.then((data) => {\r\n\t\t\t\t\t\tbody = body + ' \\n ' + separator + data.join('\\n');\r\n\t\t\t\t\t\treturn afterFile(body);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tbody = body + ' \\n ' + txt;\r\n\t\t\t\t\t\treturn afterFile(body);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\t//console.log(txt);\r\n\t\t\t\t\tbody = body + ' \\n ' + txt;\r\n\t\t\t\t\treturn afterFile(body);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t//console.log(filepath);\r\n\t} else {\r\n\t\treturn cb(null, doc, body, docdb, parentKey, math);\r\n\t}\r\n}\r\n\r\n/**\r\n * doc에서 색인할 keys의 값을 추출\r\n * @param keys\r\n * @param doc\r\n * @returns {string}\r\n */\r\nfunction getTextData(keys, doc) {\r\n\tvar str = '';\r\n\t_.forEach(keys, (n, i) => {\r\n\t\tlet value = doc[n] || doc[n.toUpperCase()];\r\n\t\tif (value)\r\n\t\t\tstr = str + (doc[n] || doc[n.toUpperCase()]) + '  \\n ';\r\n\t});\r\n\t\r\n\treturn str;\r\n}\r\n\r\n/**\r\n * [key:value] 로 키워드 생성\r\n * @param keys\r\n * @param doc\r\n * @returns {string}\r\n */\r\nfunction getTextDataWithTag(keys, doc) {\r\n\tlet str = '';\r\n\tfor (let index in keys) {\r\n\t\tlet n = keys[index];\r\n\t\tlet value = doc[n] || doc[n.toUpperCase()];\r\n\t\tif (!value) {\r\n\t\t\t//console.log(n);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\t\r\n\t\tvalue = value.toString();\r\n\t\tif (value.replace(/\\s+/g) == \"\")\r\n\t\t\tcontinue;\r\n\t\t\r\n\t\tstr = str + n.toLowerCase() + ':' + value.replace(/\\./ig, \" \") + '\\n';\r\n\t}\r\n\t\r\n\treturn separator + str + separator;\r\n}\r\n\r\n/**\r\n * reader 전체 색인시 사용\r\n * @param {Object} opts\r\n * {\r\n *      count : number,         // 한번에 색인할 갯수\r\n *      start : string,         // 시작 key 값\r\n *      db : Object,            // ldb : target db (copied db)\r\n *      core : Object           // from coredb\r\n *  }\r\n * @param cb\r\n */\r\nexport function stream(opts, cb) {\r\n\topts = opts || null;\r\n\t\r\n\tif (_.isNull(opts) || !_.isObject(opts)) {\r\n\t\tutil.errorHandler('reader option is not defined', cb);\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tif (!_.isObject(opts.db)) { // db is copied db\r\n\t\tutil.errorHandler('reader option.db is not defined', cb);\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tif (!_.isObject(opts.core)) {\r\n\t\tutil.errorHandler('reader option.core is not defined', cb);\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tif (!opts.count) {\r\n\t\topts.count = 1000;\r\n\t}\r\n\t\r\n\tlet parentKey = _.map(_.filter(opts.core.index.columns, {type: 'parentkey'}), 'name')[0];    // 상위 그룹이 있을 경우 ex) 시험지 및 문항\r\n\t\r\n\tvar last = '0';         // 마지막 key 값\r\n\tvar res = [];           // 결과 배열\r\n\tvar cnt = 0;            // cnt\r\n\tvar readCnt = 0;        // ldb에서 가져온 cnt\r\n\tvar ignoredCnt = 0;     // 무시된 cnt\r\n\t\r\n\tconsole.log('option count - ', opts.count);\r\n\t\r\n\t// 콜백 (밑에 시작 부분에서 데이터 가져온 뒤에 실행 됨)\r\n\tvar done = _.after(opts.count + 1, () => {\r\n\t\tconsole.timeEnd('readstream2');\r\n\t\tconsole.time('reverse index');\r\n\t\t\r\n\t\t// console.log(JSON.stringify(res[0].tf));\r\n\t\t// process.exit(1); // 강제 종료 (debug 용)\r\n\t\t// 색인 호출\r\n\t\treturn adder(res, {name: opts.db.s.name, parentKey: parentKey}, function () {\r\n\t\t\tconsole.log('indexed ' + (readCnt) + ' docs, ignored ' + ignoredCnt + ' docs');\r\n\t\t\t\r\n\t\t\tconsole.timeEnd('reverse index');\r\n\t\t\tif (cnt < opts.count) {\r\n\t\t\t\treturn cb(null, true, last, readCnt);\r\n\t\t\t} else {\r\n\t\t\t\treturn cb(null, false, last, readCnt);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\t\r\n\tconsole.time('readstream1');\r\n\t\r\n\t// 시작\r\n\topts.core.index.lastKey = opts.core.index.lastKey + \"\" || \"0\";\r\n\topts.db.find({_id: {$gt: opts.core.index.lastKey}}).sort({_id: 1}).limit(opts.count).toArray((err, result) => {\r\n\t\tif (err)\r\n\t\t\treturn util.errorHandler(' read stream err' + err.message, cb);\r\n\t\t\r\n\t\tlet end = () => {\r\n\t\t\t//end\r\n\t\t\tconsole.log('read steam end ' + last, readCnt);\r\n\t\t\t/*console.timeEnd('file');*/\r\n\t\t\t\r\n\t\t\t/*console.time('index');*/\r\n\t\t\tconsole.timeEnd('readstream1'); // 시간체크\r\n\t\t\tconsole.log(readCnt, opts.count);\r\n\t\t\tconsole.time('readstream2');    // 시간체크\r\n\t\t\tif (readCnt < opts.count) {\r\n\t\t\t\tfor (let i = readCnt; i < opts.count; i++) {\r\n\t\t\t\t\tdone();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tdone();         // 색인 호출을 위한 콜백\r\n\t\t};\r\n\t\t\r\n\t\treadCnt = result.length;\r\n\t\tlet index = 0;\r\n\t\tlet getData = () => {\r\n\t\t\tlet data = result[index++];\r\n\t\t\tif (!data)\r\n\t\t\t\treturn end();\r\n\t\t\t\r\n\t\t\tif (data._id > last) last = data._id; // 마지막 키 대체\r\n\t\t\t\r\n\t\t\treturn readDataOne(opts.core.apiurl, data, opts.db, opts.core.index.columns, false, false, (err, doc, body, docdb, paraParentKey, math) => {\r\n\t\t\t\tif (err && err.message == 'ignored') {\r\n\t\t\t\t\tignoredCnt++;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tparentKey = paraParentKey;\r\n\t\t\t\treturn doIndexing(opts.core.apiurl, doc, body, docdb, res, math, () => {\r\n\t\t\t\t\tcnt++;\r\n\t\t\t\t\tdone();\r\n\t\t\t\t\treturn getData();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\treturn getData();\r\n\t});\r\n}"]}