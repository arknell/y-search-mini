{"version":3,"sources":["components/indexers/indexer.js"],"names":["indexingMath","indexingOne","remove","indexingOneWithContent","run","stop","removeAndUpdateRecovery","_","require","mongodb","util","reader","isStop","logger","seeker","adder","opts","cb","Object","errorHandler","name","content","tf","mathList","index","math","push","console","log","one","res","callback","open","then","collection","temp","keys","done","after","length","removeAndUpdate","forEach","keyOne","i","findOne","_id","err","doc","K","size","k","ndocs","mergeSumObj","deleteOne","withoutFileOne","body","quizKey","quizContent","dbName","_key","doIndexing","apiurl","undefined","catch","words","term","bulkTerm","initializeUnorderedBulkOp","key","val","v","find","update","$inc","execute","posting","bulk","quiz","$unset","repeat","unit","coredb","docdb","debugLevel","isIndexing","save","count","total","doneCnt","isEach","async","event","message","db","read","core","resolve","reject","stream","start","lastKey","last","cnt","deleteKeyFromDB","deleteTerm","deletePosting","executeDelete","removeQuery","$or"],"mappings":"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","file":"indexer.js","sourcesContent":["/**\n * 메인 indexer : 색인 진입점\n * @author Saebyeok Lee\n * @type {any|*}\n * @since 0.1.1\n */\nvar _ = require('lodash');\nexport const mongodb = require('../commons/mongo');\nconst util = require('../commons/utils'),\n\treader = require('./reader');\nexport var isStop = true;         // Stop 상태 여부\nvar logger = require('../loggers/logger');\nvar seeker = require('../seekers/indexingSeeker');\nlet adder = require('./adder');\n\n/**\n * 수식 단일 색인\n * 수식은 추상화 트리 리스트로 색인됨\n * @param opts\n * @param cb\n * @returns {*}\n */\nexport function indexingMath(opts, cb) {\n\t\"use strict\";\n\t\n\tif (!opts instanceof Object) {\n\t\treturn util.errorHandler('indexer.js opts is not a Object.', cb);\n\t}\n\t\n\tif (typeof opts.name !== 'string') {\n\t\treturn util.errorHandler('indexer.js opts.name is undefined.', cb);\n\t}\n\t\n\tlet content = opts.content;\n\topts.tf = {};\n\tlet mathList = [];\n\tfor (let index in content) {\n\t\tlet math = content[index];\n\t\t\n\t\tmathList.push(JSON.stringify(math));\n\t\t\n\t}\n\t// -- 추상 수식 리스트 확인\n\tconsole.log(mathList);\n\t\n\t// -- node 별 인덱싱\n}\n\n/**\n * 단일 색인\n * @param opts\n * @param cb\n * @returns {*}\n */\nexport function indexingOne(opts, cb) {\n\t\"use strict\";\n\t\n\tif (!opts instanceof Object) {\n\t\treturn util.errorHandler('indexer.js opts is not a Object.', cb);\n\t}\n\t\n\tif (typeof opts.name !== 'string') {\n\t\treturn util.errorHandler('indexer.js opts.name is undefined.', cb);\n\t}\n\t\n\treturn reader.one(opts, (res) => {\n\t\treturn cb(res);\n\t});\n}\n\n/**\n * 색인 삭제\n * @param opts        // { name : 'DB명', keys: ['key1', 'key2'] }\n * @param callback    //    callback\n */\nexport function remove(opts, callback) {\n\t\"use strict\";\n\t\n\treturn mongodb.open('index', opts.name, false)\n\t.then((collection) => {\n\t\tlet temp = {}; // tf Object\n\t\t\n\t\t//2017.01.23 open DB 수정 (없는 db일 경우 생성하지 않음)\n\t\tif (collection == null) {\n\t\t\treturn console.log(\"wrong ldb\");\n\t\t}\n\t\t\n\t\tconsole.log('remove command ', opts.keys);\n\t\t\n\t\t// 내부 콜백 함수\n\t\tlet done = _.after(opts.length, () => {\n\t\t\tif (Object.keys(temp).length == 0)\n\t\t\t\treturn callback();\n\t\t\t\n\t\t\treturn removeAndUpdate(opts.name, temp, opts.keys, () => {\n\t\t\t\treturn callback();\t\t\t// callback 호출\n\t\t\t});\n\t\t});\n\t\t\n\t\treturn _.forEach(opts.keys, (keyOne, i) => {\n\t\t\t\n\t\t\t//key 삭제 코드 (2017.01.18 최종 수정)\n\t\t\t\n\t\t\treturn collection.findOne({_id: keyOne}, (err, doc) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (doc == null) {\n\t\t\t\t\t//2017.01.16 key 가 없다면 throw 가 아닌 continue 처리를 해야함, done 함수 실행을 위함, KCW\n\t\t\t\t\tconsole.log(\"Key is not found in database \", opts.name);\n\t\t\t\t\t\n\t\t\t\t\treturn done();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//console.log(\"value\" , doc);\n\t\t\t\t\n\t\t\t\tlet K = _.size(doc.tf);\n\t\t\t\tfor (let k = 0; k < K; k++) {  // tf 값은 지우고, ndocs 값을 추가\n\t\t\t\t\t\n\t\t\t\t\tif (doc.tf[k]) {\n\t\t\t\t\t\tdelete doc.tf[k].tf;\n\t\t\t\t\t\tdoc.tf[k].ndocs = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//console.log('before tf ', doc.tf);\n\t\t\t\ttemp = util.mergeSumObj(temp, doc.tf);\n\t\t\t\t//console.log('after tf ', temp);\n\t\t\t\t\n\t\t\t\t//2017.01.17 키 삭제\n\t\t\t\treturn collection.deleteOne({_id: keyOne}, (err) => {\n\t\t\t\t\tif (err)\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\n\t\t\t\t\treturn done();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n}\n\n/**\n * 인덱싱할 컨텐츠를 함께 보내왔을 경우 처리\n * @param opts\n * @param cb\n * @returns {*}\n */\nexport function indexingOneWithContent(opts, cb) {\n\t\n\treturn reader.withoutFileOne(opts, (err, body) => {\n\t\tlet quizKey = opts.keys[0];\n\t\tlet quizContent = opts.content;\n\t\t\n\t\tlet dbName = opts.name;\n\t\treturn mongodb.open('index', dbName, false)\n\t\t.then((collection) => {\n\t\t\tbody += quizContent;\n\t\t\t\n\t\t\tlet res = [];\n\t\t\t\n\t\t\tlet done = () => {\n\t\t\t\treturn adder(res, {name: dbName}, () => {\n\t\t\t\t\treturn cb(null);\n\t\t\t\t});\n\t\t\t};\n\t\t\t\n\t\t\treturn collection.findOne({_id: quizKey}, (err, doc) => {\n\t\t\t\tif (err)\n\t\t\t\t\treturn cb(err);\n\t\t\t\t\n\t\t\t\tif (doc == null) {\n\t\t\t\t\tconsole.log(\"why null\", quizKey);\n\t\t\t\t\tconsole.log(\"why null\", dbName);\n\t\t\t\t}\n\t\t\t\tdoc._key = quizKey;\n\t\t\t\t//console.log(body);\n\t\t\t\treturn reader.doIndexing(collection.apiurl, doc, body, collection, res, undefined, done);\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t});\n\t});\n}\n\n/**\n * 색인된 내용에서 해당 내용을 제거\n * @param name        // db 명 (table 명)\n * @param words            // 뺄 단어 Object {'word1', {freq : 1, ndocs : 1}, ... }\n * @param keys            // 문서 keys ['key1','key2', ... ]\n * @param callback\n */\nfunction removeAndUpdate(name, words, keys, callback) {\n\t\n\treturn mongodb.open('index', name + '_term', false)\n\t.then((term) => {\n\t\tif (term == null) {\n\t\t\treturn console.log(\"wrong mongodb collection\");\n\t\t}\n\t\t\n\t\tlet bulkTerm = term.initializeUnorderedBulkOp();\n\t\t\n\t\tfor (let key in words) {\n\t\t\tlet val = words[key];\n\t\t\t\n\t\t\t//set value to minus\n\t\t\tfor (let v in val) {\n\t\t\t\tval[v] = -val[v];\n\t\t\t}\n\t\t\t\n\t\t\tbulkTerm.find({_id: key}).update({$inc: val});\n\t\t}\n\t\t\n\t\treturn bulkTerm.execute();\n\t})\n\t.then(() => {\n\t\treturn mongodb.open('index', name + '_posting', false);\n\t})\n\t.then((posting) => {\n\t\tif (posting == null) {\n\t\t\treturn console.log(\"wrong mongodb collection\");\n\t\t}\n\t\t\n\t\tlet size = _.size(words) * 2;\n\t\t\n\t\tif (size < 1) {\n\t\t\tconsole.log('removeAndUpdate - words.size() is 0');\n\t\t\treturn callback();\n\t\t}\n\t\t\n\t\tlet bulk = posting.initializeUnorderedBulkOp();\n\t\t\n\t\tlet quiz = {};\n\t\tfor (let index in keys) {\n\t\t\tlet val = keys[index];\n\t\t\tquiz[val] = \"\";\n\t\t}\n\t\t\n\t\tfor (let key in words) {\n\t\t\tbulk.find({_id: key}).update({$unset: quiz});\n\t\t}\n\t\t\n\t\treturn bulk.execute();\n\t})\n\t.then(() => {\n\t\treturn callback();\n\t})\n\t.catch((err) => {\n\t\treturn console.log(err);\n\t});\n}\n\n/**\n * 웹서비스에서 호출하는 색인 함수\n * 1. 기본 파라메터 셋팅\n * 2. core 정보를 가져와서 색인을 하는 재귀 함수(async)를 호출\n * @param {Object} opts\n * {\n *     repeat : Boolean, //option - default false\n *     name : string,\n *     count : number, //option - default 10000\n *     unit : number,  //option - default 100\n * }\n * @param cb\n */\nexport function run(opts, cb) { // opts { name : '', event : Object() }\n\t\"use strict\";\n\t\n\tif (!opts instanceof Object) {\n\t\treturn util.errorHandler('indexer.js opts is not a Object.', cb);\n\t}\n\t\n\tif (typeof opts.name !== 'string') {\n\t\treturn util.errorHandler('indexer.js opts.name is undefined.', cb);\n\t}\n\t\n\topts.repeat = opts.repeat || false;  // opts { name : 'quizdoc', event : Object(), repeat : false, unit : 500 }\n\topts.unit = opts.unit || 500;\n\t\n\treturn mongodb.open('core', 'coredb')\n\t.then((coredb) => {\n\t\treturn mongodb.open('batch', opts.name, false)            // 색인을 위해 복사된 db\n\t\t.then((docdb) => {\n\t\t\t\n\t\t\t//2017.01.23 open DB 수정 (없는 db일 경우 생성하지 않음)\n\t\t\tif (docdb == null) {\n\t\t\t\treturn logger.log('error', \"[error] can't indexing! wrong ldb \" + opts.name);\n\t\t\t}\n\t\t\t\n\t\t\tisStop = false;\n\t\t\treturn coredb.findOne({_id: opts.name}, (err, doc) => {// core db에서 정보 가져옴\n\t\t\t\t//expect(err).to.be.a('null');\n\t\t\t\tif (err) throw err;\n\t\t\t\t\n\t\t\t\tlet done = (err) => {\n\t\t\t\t\t// 색인이 끝났을 경우\n\t\t\t\t\tif (err)\n\t\t\t\t\t\treturn logger.log(logger.debugLevel, err);\n\t\t\t\t\t\n\t\t\t\t\t// 색인 상태를 false로 변경 후 db에 업데이트\n\t\t\t\t\tdoc.isIndexing = false;\n\t\t\t\t\tisStop = true;\n\t\t\t\t\treturn coredb.save(doc, (err) => {\n\t\t\t\t\t\tif (err) throw err;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log('finished indexing ' + opts.name);\n\t\t\t\t\t\treturn cb();\n\t\t\t\t\t});\n\t\t\t\t\t//console.log('done');\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t// DB에 색인 상태로 변경\n\t\t\t\tdoc.isIndexing = true;\n\t\t\t\tcoredb.save(doc, (err) => {\n\t\t\t\t\tif (err) throw err;\n\t\t\t\t});\n\t\t\t\t// 색인 카운트\n\t\t\t\t\n\t\t\t\topts.count = doc.index.total;\n\t\t\t\tdoc.index.doneCnt = doc.index.doneCnt || 0;\n\t\t\t\t// 비동기 색인 호출\n\t\t\t\tif (opts.isEach == true) {\n\t\t\t\t\t//console.log(doc);\n\t\t\t\t\tconsole.log('index each is gone');\n\t\t\t\t\treturn cb();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('do index all');\n\t\t\t\t\treturn async(doc.index.doneCnt, opts.count, coredb, opts.unit, docdb, doc, opts.event, done);\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\treturn util.errorHandler(err.message, cb);\n\t\t});\n\t})\n\t.catch((err) => {\n\t\treturn util.errorHandler(err.message, cb);\n\t});\n}\n\n/**\n * db를 열어서 key의 내용을 doc(value)으로 업데이트\n * @param db\n * @param key\n * @param doc\n * @param cb\n */\nfunction save(db, key, doc, cb) {\n\t\"use strict\";\n\treturn db.save(doc, err => {\n\t\tif (err) {\n\t\t\treturn cb(err);\n\t\t}\n\t\t\n\t\treturn cb(null);\n\t});\n}\n\n/**\n * 비동기 색인 함수\n * @param i         // 시작 index\n * @param total     // 전체 index\n * @param coredb    // core ldb\n * @param unit      // 한번에 색인할 갯수 (현재 함수에서 처리할 갯수)\n * @param docdb     // 복사된 ldb\n * @param doc       // core 내용\n * @param event     // 웹페이지 호출 용 socket (색인 결과를 중간 중간 리턴)\n * @param cb        // 콜백 함수\n */\nfunction async(i, total, coredb, unit, docdb, doc, event, cb) {\n\t\"use strict\";\n\tconsole.log(\"total :\" + total + \", i \" + i, isStop);\n\tif (i >= total || isStop === true) {     // 현재 i가 total 값 보다 클 경우 색인 완료\n\t\tconsole.log(\"total2 :\" + total + \", i \" + i, isStop);\n\t\t\n\t\treturn coredb.save(doc, (err) => {\n\t\t\t\n\t\t\treturn cb();\n\t\t});\n\t}\n\t\n\treturn read(coredb, unit, docdb, doc)          // read 함수 호출\n\t.then(core => {                     // 성공일 경우\n\t\tconsole.log('read');\n\t\treturn async(i + unit, total, coredb, unit, docdb, doc, event, cb);  // i값을 증가하서 재귀 호출\n\t})\n\t.catch((err) => cb(err));          // 실패일 경우\n}\n\nexport function stop() {\n\t\"use strict\";\n\tisStop = true;\n}\n\n/**\n * Reader를 호출하여 DB에서 색인할 갯수 만큼의 복사된 문서(record)를 불러옴\n * @param coredb        // core ldb\n * @param unit          // 읽을 갯수\n * @param docdb         // 문서가 복사된 ldb\n * @param core          // core Object\n * @returns {Promise}   // callback 대신 사용\n */\nfunction read(coredb, unit, docdb, core) {\n\t\"use strict\";\n\t\n\treturn new Promise(function (resolve, reject) {\n\t\t// reader.js 함수의 stream 부분 호출\n\t\t\n\t\treturn reader.stream({                 // reader.js 함수의 stream 부분 호출\n\t\t\tcount: unit,\n\t\t\tdb:    docdb,\n\t\t\tcore:  core,\n\t\t\tstart: core.index.lastKey\n\t\t}, (err, done, last, cnt) => {\n\t\t\tif (err) throw err;\n\t\t\t\n\t\t\tcore.index.doneCnt = (core.index.doneCnt || 0 ) + cnt;\n\t\t\tcore.index.lastKey = last;\n\t\t\t/*\n\t\t\t Indexed number of documents : 0\n\t\t\t Last Indexed Key: 0\n\t\t\t */\n\t\t\tconsole.log('lastKey ' + last);\n\t\t\t\n\t\t\treturn save(coredb, core.name, core, err => {\n\t\t\t\tif (err)\n\t\t\t\t\treturn reject(err);\n\t\t\t\telse\n\t\t\t\t\treturn resolve(core);\n\t\t\t\t//cb(null);\n\t\t\t});\n\t\t});\n\t});\n}\n\n/**\n * 색인된 내용에서 해당 내용을 제거\n * @param name        // db 명 (table 명)\n * @param words            // 뺄 단어 Object {'word1', {freq : 1, ndocs : 1}, ... }\n * @param keys            // 문서 keys ['key1','key2', ... ]\n * @param callback\n */\nexport function removeAndUpdateRecovery(name, words, keys, callback) {\n\tif (Object.keys(words).length == 0) {\n\t\treturn deleteKeyFromDB(name, keys, callback);\n\t}\n\t\n\treturn deleteTerm(name, words, (err) => {\n\t\tconsole.log('delete term complete');\n\t\tif (err) {\n\t\t\tconsole.log(err);\n\t\t\treturn deleteKeyFromDB(name, keys, callback);\n\t\t}\n\t\t\n\t\treturn deletePosting(name, words, keys, (err) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t\tconsole.log('delete posting complete');\n\t\t\treturn deleteKeyFromDB(name, keys, callback);\n\t\t});\n\t});\n}\n\nfunction deleteTerm(name, words, callback) {\n\treturn mongodb.open('index', name + '_term', false)\n\t.then((term) => {\n\t\tif (term == null) {\n\t\t\treturn console.log(\"wrong mongodb collection\");\n\t\t}\n\t\t\n\t\tlet i = 0;\n\t\tlet executeDelete = () => {\n\t\t\tlet key = Object.keys(words)[i++];\n\t\t\tif (!key) {\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t\t\n\t\t\tlet val = words[key];\n\t\t\t\n\t\t\t//set value to minus\n\t\t\tfor (let v in val) {\n\t\t\t\tval[v] = -val[v];\n\t\t\t}\n\t\t\t\n\t\t\treturn term.update({_id: key}, {$inc: val}, (err) => {\n\t\t\t\tif (err)\n\t\t\t\t\tconsole.log(err);\n\t\t\t\treturn executeDelete();\n\t\t\t});\n\t\t};\n\t\t\n\t\treturn executeDelete();\n\t});\n}\n\nfunction deletePosting(name, words, keys, callback) {\n\treturn mongodb.open('index', name + '_posting', false)\n\t.then((posting) => {\n\t\tif (posting == null) {\n\t\t\tconsole.log(\"wrong mongodb collection\");\n\t\t\treturn callback()\n\t\t}\n\t\t\n\t\tlet quiz = {};\n\t\tfor (let index in keys) {\n\t\t\tlet val = keys[index];\n\t\t\tquiz[val] = \"\";\n\t\t}\n\t\t\n\t\tlet i = 0;\n\t\tlet executeDelete = () => {\n\t\t\tlet key = Object.keys(words)[i++];\n\t\t\tif (!key)\n\t\t\t\treturn callback();\n\t\t\t\n\t\t\treturn posting.update({_id: key}, {$unset: quiz}, (err) => {\n\t\t\t\tif (err)\n\t\t\t\t\tconsole.log(err);\n\t\t\t\treturn executeDelete();\n\t\t\t});\n\t\t};\n\t\t\n\t\treturn executeDelete();\n\t});\n}\n\nfunction deleteKeyFromDB(name, keys, callback) {\n\tmongodb.open('index', name, false)\n\t.then((collection) => {\n\t\tlet removeQuery = [];\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tremoveQuery.push({_id: keys[i]});\n\t\t}\n\t\t\n\t\treturn collection.remove({$or: removeQuery}, () => {\n\t\t\treturn callback();\n\t\t});\n\t})\n\t.catch((err) => {\n\t\treturn callback(err);\n\t});\n}\n"]}