{"version":3,"sources":["components/indexers/adder.js"],"names":["_","require","mongodb","util","logger","addTerm","db","docs","callback","ndocs","cloneDeep","terms","i","n","mergeSumObj","tf","forEach","val","key","omit","done","err","log","message","writeToDatabase","addPosting","console","_key","bulk","initializeUnorderedBulkOp","find","_id","upsert","update","$inc","execute","then","catch","insertParentKey","parentKeyName","index","doc","parentKey","$addToSet","child","errorHandler","msg","error","module","exports","opts","noop","isNull","name","undefined","calc","open","termdb","postingdb","parentCollection"],"mappings":"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","file":"adder.js","sourcesContent":["/**\r\n * 색인 DB에 추가\r\n * [name]_term          Term DB\r\n * [name]_posting       Posting DB\r\n * 기존 LDB로 구축된 라이브러리를 MongoDB 용으로 교체\r\n * @author ChanWoo Kwon\r\n * @since 0.1.0\r\n */\r\nvar _ = require('lodash');\r\nvar mongodb = require('../commons/mongo'),\r\n\tutil = require('../commons/utils');\r\nlet logger = require('../loggers/logger');\r\n\r\n/**\r\n * term에 색인 단어 추가\r\n * @param db        // mongodb collection\r\n * @param docs      // words 배열\r\n * @param callback  // callback 함수\r\n */\r\nfunction addTerm(db, docs, callback) {\r\n\tvar ndocs = _.cloneDeep(docs);\r\n\tvar terms = {};\r\n\tfor (let i in ndocs) {\r\n\t\tlet n = ndocs[i];\r\n\t\tterms = util.mergeSumObj(terms, _(n.tf).forEach(function (val, key) {\r\n\t\t\tndocs[i].tf[key] = _.omit(ndocs[i].tf[key], ['tf']); // get only freq\r\n\t\t\tndocs[i].tf[key].ndocs = 1;\r\n\t\t}));\r\n\t}\r\n\t\r\n\tlet done = (err) => {\r\n\t\tif (err)\r\n\t\t\tlogger.log('error', err.message);\r\n\t\t\r\n\t\treturn callback();\r\n\t};\r\n\t//console.log(terms);\r\n\treturn writeToDatabase(db, terms, done);\r\n}\r\n\r\n/**\r\n * posting에 문서 색인 추가\r\n * @param db            // mongodb collection\r\n * @param docs          // words 배열\r\n * @param callback      // callback 함수\r\n */\r\nfunction addPosting(db, docs, callback) {\r\n\tvar ndocs = _.cloneDeep(docs);\r\n\t\r\n\tconsole.log('deep clone complete');\r\n\t\r\n\tvar terms = {};\r\n\t\r\n\tfor (let i in ndocs) {\r\n\t\tlet n = ndocs[i];\r\n\t\tterms = util.mergeSumObj(terms, _(n.tf).forEach(function (val, key) {\r\n\t\t\tndocs[i].tf[key] = {};\r\n\t\t\tndocs[i].tf[key][n._key] = val.tf;\r\n\t\t}));\r\n\t}\r\n\t\r\n\tconsole.log('make term complete');\r\n\t\r\n\tlet done = (err) => {\r\n\t\t\r\n\t\tconsole.log('save posting complete');\r\n\t\tif (err)\r\n\t\t\tlogger.log('error', err.message);\r\n\t\t\r\n\t\treturn callback();\r\n\t};\r\n\t\r\n\treturn writeToDatabase(db, terms, done);\r\n}\r\n\r\nfunction writeToDatabase(db, terms, done) {\r\n\tlet bulk = db.initializeUnorderedBulkOp();\r\n\t\r\n\tfor (let key in terms) {\r\n\t\tlet val = terms[key];\r\n\t\tbulk.find({_id: key}).upsert().update({$inc: val});\r\n\t}\r\n\t\r\n\treturn bulk.execute()\r\n\t.then(() => {\r\n\t\treturn done();\r\n\t})\r\n\t.catch((err) => {\r\n\t\treturn done(err);\r\n\t});\r\n}\r\n\r\nfunction insertParentKey(db, docs, parentKeyName, done) {\r\n\tlet bulk = db.initializeUnorderedBulkOp();\r\n\t\r\n\tfor (let index in docs) {\r\n\t\tlet doc = docs[index];\r\n\t\t//console.log(doc);\r\n\t\tlet parentKey = doc[parentKeyName];\r\n\t\tbulk.find({_id: parentKey}).upsert().update({$addToSet: {child: doc._key}});\r\n\t}\r\n\t\r\n\treturn bulk.execute()\r\n\t.then(() => {\r\n\t\treturn done();\r\n\t})\r\n\t.catch((err) => {\r\n\t\treturn done(err);\r\n\t});\r\n}\r\n\r\nfunction errorHandler(msg, callback) {\r\n\tconsole.error(msg);\r\n\treturn callback(msg);\r\n}\r\n\r\n/**\r\n * 색인 DB에 추가\r\n * [name]_term          Term DB\r\n * [name]_posting       Posting DB\r\n *\r\n * @param doc       // 현재 색인할 문서\r\n * @param opts      // Object {name: 색인 대상 mongodb collection 이름 }\r\n * @param callback\r\n */\r\nmodule.exports = function (doc, opts, callback) {\r\n\t//console.log('adder', JSON.stringify(doc));\r\n\tcallback = callback || _.noop;\r\n\topts = opts || null;\r\n\t\r\n\tif (_.isNull(opts)) {\r\n\t\treturn errorHandler('adder.js Can not read adder options ', callback);\r\n\t}\r\n\t\r\n\tif (opts.name === undefined) {\r\n\t\treturn errorHandler('adder.js Can not read property [name] of option ', callback);\r\n\t}\r\n\t\r\n\t//console.log(\"name\", opts.name);\r\n\t//console.log(doc);\r\n\tlet calc = () => {\r\n\t\tmongodb.open('index', opts.name + '_term', false)\r\n\t\t.then((termdb) => {\r\n\t\t\treturn addTerm(termdb, doc, () => {\r\n\t\t\t\treturn mongodb.open('index', opts.name + '_posting', false)\r\n\t\t\t\t.then((postingdb) => {\r\n\t\t\t\t\treturn addPosting(postingdb, doc, () => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn callback();\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\treturn errorHandler(err.message, callback);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\treturn errorHandler(err.message, callback);\r\n\t\t});\r\n\t};\r\n\t\r\n\tif (opts.parentKey) {\r\n\t\t// -- parent key grouping\r\n\t\treturn mongodb.open('index', opts.name + '_group', true)\r\n\t\t.then((parentCollection) => {\r\n\t\t\treturn insertParentKey(parentCollection, doc, opts.parentKey, () => {\r\n\t\t\t\treturn calc();\r\n\t\t\t});\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n\t}\r\n\t\r\n\treturn calc();\r\n};\r\n"]}