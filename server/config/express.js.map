{"version":3,"sources":["config/express.js"],"names":["app","env","get","use","bodyParser","urlencoded","extended","json","secret","config","secrets","session","saveUninitialized","resave","process","SAUCE_USERNAME","conditionalCSRF","require","ignore","truePath","req","res","next","indexOf","path","console","log","csrf","angular","xframe","hsts","maxAge","includeSubDomains","preload","xssProtection","e","error"],"mappings":"AAAA;;;;AAIA;;;;;;kBAUe,UAAUA,GAAV,EAAe;AAC7B,KAAIC,MAAMD,IAAIE,GAAJ,CAAQ,KAAR,CAAV;AACA;AACAF,KAAIG,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAR;AACAN,KAAIG,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;AACAP,KAAIG,GAAJ,CAAQ,+BAAR;AACAH,KAAIG,GAAJ,CAAQ,6BAAR;;AAEA;AACA;AACA;AACAH,KAAIG,GAAJ,CAAQ,8BAAQ;AACfK,UAAmBC,sBAAOC,OAAP,CAAeC,OADnB;AAEfC,qBAAmB,IAFJ;AAGfC,UAAmB;AAHJ,EAAR,CAAR;;AAMA;;;;AAIA,KAAIZ,QAAQ,MAAR,IAAkB,CAACa,QAAQb,GAAR,CAAYc,cAAnC,EAAmD;AAClDf,MAAIG,GAAJ,CAAQa,eAAR,EADkD,CACxB;AAC1B;;AAED,KAAI,kBAAkBf,GAAtB,EAA2B;AAC1BD,MAAIG,GAAJ,CAAQc,QAAQ,oBAAR,EAA8B;AACrCC,WAAQ,CACP,cADO,EAEP,cAFO,EAES,eAFT,EAE0B,eAF1B,EAE2C,eAF3C,EAE4D,gBAF5D,EAGP,eAHO,EAGU,eAHV,EAG2B,gBAH3B,EAG6C,eAH7C,EAG8D,eAH9D;AAD6B,GAA9B,CAAR;AAOA;;AAED,KAAI,kBAAkBjB,GAAlB,IAAyB,WAAWA,GAAxC,EAA6C;AAC5CD,MAAIG,GAAJ,CAAQ,6BAAR,EAD4C,CACnB;AACzB;;AAED;AACA,KAAIgB,WAAW,CACd,oBADc,EAEd,qBAFc,EAGd,eAHc,EAId,cAJc,EAKd,yBALc,EAMd,oBANc,EAOd,wBAPc,EAQd,qBARc,EASd,uBATc,EAUd,uBAVc,EAWd,yBAXc,EAYd,qBAZc,EAad,6BAbc,EAcd,0BAdc,EAed,yBAfc,EAgBd,sBAhBc,EAiBd,yBAjBc,EAkBd,YAlBc,EAmBd,iBAnBc,EAoBd,sBApBc,EAqBd,iBArBc,EAsBd,mBAtBc,EAuBd,mBAvBc,EAwBd,YAxBc,EAyBd,gBAzBc,EA0Bd,mBA1Bc,CAAf;;AA6BA;;;;AAIA,UAASH,eAAT,CAAyBI,GAAzB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;;AAExC,MAAIH,SAASI,OAAT,CAAiBH,IAAII,IAArB,IAA6B,CAAC,CAAlC,EAAqC;AACpCC,WAAQC,GAAR,CAAY,UAAZ,EAAwBN,IAAII,IAA5B;AACAF;AACA,GAHD,MAGO;AACN,OAAI;AACH,yBAAM;AACLK,WAAe;AACdC,eAAS;AADK,MADV;AAILC,aAAe,YAJV;AAKLC,WAAe;AACdC,cAAmB,QADL,EACe;AAC7BC,yBAAmB,IAFL;AAGdC,eAAmB;AAHL,MALV;AAULC,oBAAe;AAVV,KAAN,EAWGd,GAXH,EAWQC,GAXR,EAWaC,IAXb;AAYA,IAbD,CAaE,OAAOa,CAAP,EAAU;AACXV,YAAQW,KAAR,CAAcD,CAAd;AACA;AACD;AACD;AACD,C;;AAzGD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA","file":"express.js","sourcesContent":["/**\r\n * Express configuration\r\n */\r\n\r\n'use strict';\r\n\r\nimport bodyParser from 'body-parser';\r\nimport methodOverride from 'method-override';\r\nimport cookieParser from 'cookie-parser';\r\nimport errorHandler from 'errorhandler';\r\nimport lusca from 'lusca';\r\nimport config from './environment';\r\nimport session from 'express-session';\r\n\r\nexport default function (app) {\r\n\tvar env = app.get('env');\r\n\t//app.use(compression());\r\n\tapp.use(bodyParser.urlencoded({extended: false}));\r\n\tapp.use(bodyParser.json());\r\n\tapp.use(methodOverride());\r\n\tapp.use(cookieParser());\r\n\t\r\n\t// Persist sessions with MongoStore / sequelizeStore\r\n\t// We need to enable sessions for passport-twitter because it's an\r\n\t// oauth 1.0 strategy, and Lusca depends on sessions\r\n\tapp.use(session({\r\n\t\tsecret:            config.secrets.session,\r\n\t\tsaveUninitialized: true,\r\n\t\tresave:            false\r\n\t}));\r\n\t\r\n\t/**\r\n\t * Lusca - express server security\r\n\t * https://github.com/krakenjs/lusca\r\n\t */\r\n\tif (env !== 'test' && !process.env.SAUCE_USERNAME) {\r\n\t\tapp.use(conditionalCSRF); // for external API\r\n\t}\r\n\t\r\n\tif ('development' === env) {\r\n\t\tapp.use(require('connect-livereload')({\r\n\t\t\tignore: [\r\n\t\t\t\t/^\\/api\\/(.*)/,\r\n\t\t\t\t/\\.js(\\?.*)?$/, /\\.css(\\?.*)?$/, /\\.svg(\\?.*)?$/, /\\.ico(\\?.*)?$/, /\\.woff(\\?.*)?$/,\r\n\t\t\t\t/\\.png(\\?.*)?$/, /\\.jpg(\\?.*)?$/, /\\.jpeg(\\?.*)?$/, /\\.gif(\\?.*)?$/, /\\.pdf(\\?.*)?$/\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t\r\n\tif ('development' === env || 'test' === env) {\r\n\t\tapp.use(errorHandler()); // Error handler - has to be last\r\n\t}\r\n\t\t\r\n\t// 외부에서 호출 가능한 APIs\r\n\tvar truePath = [\r\n\t\t'/api/users/sign/in',\r\n\t\t'/api/users/sign/out',\r\n\t\t'/api/users/me',\r\n\t\t'/api/searchs',\r\n\t\t'/api/indexings/indexing',\r\n\t\t'/api/indexings/one',\r\n\t\t'/api/indexings/content',\r\n\t\t'/api/indexings/math',\r\n\t\t'/api/indexings/remove',\r\n\t\t'/api/indexings/modify',\r\n\t\t'/api/indexings/getTotal',\r\n\t\t'/api/indexings/copy',\r\n\t\t'/api/indexings/updateColumn',\r\n\t\t'/api/indexings/removeAll',\r\n\t\t'/api/indexings/checkKey',\r\n\t\t'/api/similarity/code',\r\n\t\t'/api/similarity/content',\r\n\t\t'/api/cores',\r\n\t\t'/api/cores/meta',\r\n\t\t'/api/cores/meta/save',\r\n\t\t'/api/cores/save',\r\n\t\t'/api/cores/remove',\r\n\t\t'/api/cores/create',\r\n\t\t'/api/words',\r\n\t\t'/api/words/all',\r\n\t\t'/api/words/search'\r\n\t];\r\n\t\r\n\t/**\r\n\t * Lusca - express server security\r\n\t * https://github.com/krakenjs/lusca\r\n\t */\r\n\tfunction conditionalCSRF(req, res, next) {\r\n\t\t\r\n\t\tif (truePath.indexOf(req.path) > -1) {\r\n\t\t\tconsole.log('req.path', req.path);\r\n\t\t\tnext();\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tlusca({\r\n\t\t\t\t\tcsrf:          {\r\n\t\t\t\t\t\tangular: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\txframe:        'SAMEORIGIN',\r\n\t\t\t\t\thsts:          {\r\n\t\t\t\t\t\tmaxAge:            31536000, //1 year, in seconds\r\n\t\t\t\t\t\tincludeSubDomains: true,\r\n\t\t\t\t\t\tpreload:           true\r\n\t\t\t\t\t},\r\n\t\t\t\t\txssProtection: true\r\n\t\t\t\t})(req, res, next);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}